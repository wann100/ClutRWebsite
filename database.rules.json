{
  "rules": {
   "users":{
      ".read": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'",
    "$uid": {
       ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'",
       ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'"
     }

   } ,
      "appointments":{
    ".read": "auth != null",
    ".write": "auth != null",
   } ,
     "applications":{
      ".read": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'",
    "$id": {
       ".read": "$id === auth.uid || root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'",
       ".write": "$id === auth.uid || root.child('users').child(auth.uid).child('userDetails/role').val() =='admin'"
     }
   } ,
     "services":{
    ".read": true,
    ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() =='admin' "
   } ,
      "cleanerQue":{
    ".read": true,
    ".write": "auth != null",
   },
     "appointmentQue":{
    ".read": true,
    ".write": "auth != null",
   } ,
   "settings": {
        ".read": true,
        ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() =='admin' "
  },
  "media": {
    "$id": {
      ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
      ".read":true
    },
    ".read":true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
  "nav": {
        ".read": true,
    	  ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
  "fields": {
        ".read": true,
     ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
  "contents": {
        ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
  "routes": {
       ".read": true,
     ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
  "other": {
       ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('userDetails/role').val() ==='admin' ",
  },
    "channels": {
      ".read": "auth != null",
      "$channelId": {
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['id', 'name'])",
        "name": {
          ".validate": "newData.val().length > 0"
        },
          "id": {
            ".validate": "newData.val() === $channelId"
          }
      }
    },
    "messages": {
      "$channelId": {
        ".read": "auth != null",
        ///".validate": "root.child('channels/' + $channelId).exists()",
        //"$messageId": {
          	".write": "auth != null",
           /// ".validate": "(newData.hasChildren(['content', 'user', 'timestamp']) && !newData.hasChildren(['image'])) || (newData.hasChildren(['image', 'user', 'timestamp']) && !newData.hasChildren(['content']))",
          //  "content": {
           ///   ".validate": "newData.val().length > 0"
          //  },
           //  "image": {
           //    ".validate": "newData.val().length > 0"
            // },
              "user": {
                ".validate": "newData.hasChildren(['name', 'avatar', 'id'])",
                  "id": {
                    ".validate": "newData.val() === auth.uid"
                  }
              }
       // }
      }
    },
    "privateMessages": {
      "$uid1": {
        "$uid2": {
          ".read": "auth != null && ($uid1 === auth.uid || $uid2 === auth.uid)",
         // "$messageId": {
            ".write": "auth != null && newData.child('user/id').val() === auth.uid",
            //".validate": "$uid1 < $uid2 && (newData.hasChildren(['content', 'user', 'timestamp']) && !newData.hasChildren(['image'])) || (newData.hasChildren(['image', 'user', 'timestamp']) && !newData.hasChildren(['content']))",
           //  "content": {
            //  ".validate": "newData.val().length > 0"
           // },
            "image": {
               ".validate": "newData.val().length > 0"
             },
            "user": {
              ".validate": "newData.hasChildren(['name', 'avatar', 'id'])",
                "id": {
                  ".validate": "newData.val() === auth.uid"
                }
            }
          }
        }
      }
    ,
    "presence": {
      ".read": "auth != null",
      ".write": "auth != null"
    },



      }
}
