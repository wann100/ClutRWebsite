{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js??ref--13-0!/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js","mtime":1565650017789},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js","mtime":1565232944998}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\"; //**\n\n/**\n * This function gets all the current applications\n */\n//\n\nexport function getApplications() {\n  return _getApplications.apply(this, arguments);\n}\n/**\n * Dowload application uploaded id's\n * @param {*} application_id \n * @param {*} user_id \n */\n\nfunction _getApplications() {\n  _getApplications = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var return_this, userRef;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return_this = [];\n            userRef = firebase.database().ref(\"/applications/\");\n            _context2.next = 4;\n            return userRef.on(\"value\",\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(snapshot) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return snapshot.forEach(function (childSnapshot) {\n                          //   console.log(childSnapshot.key);\n                          var objecttoreturn = {\n                            applicationinfo: childSnapshot.val().applicationDetails,\n                            Idurl: downloadApplicationImages(childSnapshot.key)\n                          }; // console.log(objecttoreturn);\n\n                          return_this.push(objecttoreturn);\n                        });\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            return _context2.abrupt(\"return\", return_this);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getApplications.apply(this, arguments);\n}\n\nexport function downloadApplicationImages(user_id) {\n  var return_this = [];\n  var Frontref = firebase.storage().ref(\"applications/\".concat(user_id)).child(\"front_id\");\n  var Backref = firebase.storage().ref(\"applications/\".concat(user_id)).child(\"back_id\");\n  Frontref.getDownloadURL().then(function (url) {\n    return_this.push(url);\n  });\n  Backref.getDownloadURL().then(function (url) {\n    return_this.push(url);\n  });\n  return return_this;\n}",{"version":3,"sources":["/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js"],"names":["firebase","getApplications","return_this","userRef","database","ref","on","snapshot","forEach","childSnapshot","objecttoreturn","applicationinfo","val","applicationDetails","Idurl","downloadApplicationImages","key","push","user_id","Frontref","storage","child","Backref","getDownloadURL","then","url"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP,C,CACA;;AACA;;;AAGA;;AACA,gBAAsBC,eAAtB;AAAA;AAAA;AAiBA;;;;;;;;;0BAjBO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,WADD,GACe,EADf;AAECC,YAAAA,OAFD,GAEWH,QAAQ,CAACI,QAAT,GAAoBC,GAApB,CAAwB,gBAAxB,CAFX;AAAA;AAAA,mBAGEF,OAAO,CAACG,EAAR,CAAW,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGjBA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,aAAa,EAAI;AACrC;AACC,8BAAIC,cAAc,GAAC;AAACC,4BAAAA,eAAe,EAACF,aAAa,CAACG,GAAd,GAAoBC,kBAArC;AAAwDC,4BAAAA,KAAK,EAACC,yBAAyB,CAACN,aAAa,CAACO,GAAf;AAAvF,2BAAnB,CAFoC,CAGtC;;AACEd,0BAAAA,WAAW,CAACe,IAAZ,CAAiBP,cAAjB;AACH,yBALK,CAHiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB;;AAAA;AAAA;AAAA;AAAA,gBAHF;;AAAA;AAAA,8CAcIR,WAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,OAAO,SAASa,yBAAT,CAAmCG,OAAnC,EAA2C;AAC9C,MAAIhB,WAAW,GAAG,EAAlB;AACA,MAAMiB,QAAQ,GAAGnB,QAAQ,CAACoB,OAAT,GAAmBf,GAAnB,wBAAuCa,OAAvC,GAAkDG,KAAlD,CAAwD,UAAxD,CAAjB;AACA,MAAMC,OAAO,GAAGtB,QAAQ,CAACoB,OAAT,GAAmBf,GAAnB,wBAAuCa,OAAvC,GAAkDG,KAAlD,CAAwD,SAAxD,CAAhB;AACAF,EAAAA,QAAQ,CAACI,cAAT,GAA0BC,IAA1B,CAA+B,UAACC,GAAD,EAAO;AAACvB,IAAAA,WAAW,CAACe,IAAZ,CAAiBQ,GAAjB;AAAsB,GAA7D;AACAH,EAAAA,OAAO,CAACC,cAAR,GAAyBC,IAAzB,CAA8B,UAACC,GAAD,EAAO;AAACvB,IAAAA,WAAW,CAACe,IAAZ,CAAiBQ,GAAjB;AAAsB,GAA5D;AACA,SAAOvB,WAAP;AACC","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n//**\n/**\n * This function gets all the current applications\n */\n//\nexport async function getApplications(){\n    var return_this = [];\n    var userRef = firebase.database().ref(\"/applications/\");\n   await userRef.on(\"value\", async snapshot => {\n      //  console.log(\"hi\");\n      \n      await snapshot.forEach(childSnapshot => {\n         //   console.log(childSnapshot.key);\n          var objecttoreturn={applicationinfo:childSnapshot.val().applicationDetails,Idurl:downloadApplicationImages(childSnapshot.key)};\n        // console.log(objecttoreturn);\n          return_this.push(objecttoreturn);\n      });\n    });\n  \n    return return_this;\n  }\n\n/**\n * Dowload application uploaded id's\n * @param {*} application_id \n * @param {*} user_id \n */\nexport function downloadApplicationImages(user_id){\n    var return_this = [];\n    const Frontref = firebase.storage().ref(`applications/${user_id}`).child(\"front_id\");\n    const Backref = firebase.storage().ref(`applications/${user_id}`).child(\"back_id\");\n    Frontref.getDownloadURL().then((url)=>{return_this.push(url)} )\n    Backref.getDownloadURL().then((url)=>{return_this.push(url)} )\n    return return_this;\n    }"]}]}