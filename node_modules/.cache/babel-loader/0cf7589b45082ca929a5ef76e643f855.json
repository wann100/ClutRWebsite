{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js??ref--13-0!/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js","mtime":1565666404848},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js","mtime":1565232944998}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\"; //**\n\n/**\n * This function gets all the current applications\n */\n//\n\nexport function getApplications() {\n  return _getApplications.apply(this, arguments);\n}\n/**\n * Dowload application uploaded id's\n * @param {*} application_id \n * @param {*} user_id \n */\n\nfunction _getApplications() {\n  _getApplications = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var return_this, userRef;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return_this = [];\n            userRef = firebase.database().ref(\"/applications/\");\n            _context2.next = 4;\n            return userRef.on(\"value\",\n            /*#__PURE__*/\n            function () {\n              var _ref = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(snapshot) {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return snapshot.forEach(function (childSnapshot) {\n                          //   console.log(childSnapshot.key);\n                          if (childSnapshot.val().applicationDetails.status == \"pending\" || childSnapshot.val().applicationDetails.status == \"denied\") {\n                            var objecttoreturn = {\n                              applicationinfo: childSnapshot.val().applicationDetails,\n                              Idurl: downloadApplicationImages(childSnapshot.key)\n                            }; // console.log(objecttoreturn);\n\n                            return_this.push(objecttoreturn);\n                          }\n                        });\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            return _context2.abrupt(\"return\", return_this);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getApplications.apply(this, arguments);\n}\n\nexport function downloadApplicationImages(user_id) {\n  var return_this = [];\n  var Frontref = firebase.storage().ref(\"applications/\".concat(user_id)).child(\"front_id\");\n  var Backref = firebase.storage().ref(\"applications/\".concat(user_id)).child(\"back_id\");\n  Frontref.getDownloadURL().then(function (url) {\n    return_this.push(url);\n  });\n  Backref.getDownloadURL().then(function (url) {\n    return_this.push(url);\n  });\n  return return_this;\n}\nexport function updateApplication(application_id, nameofitemtoupdate, item) {\n  if (nameofitemtoupdate === \"status\") {\n    firebase.database().ref(\"applications/\".concat(application_id, \"/applicationDetails\")).update({\n      status: item\n    });\n  }\n}",{"version":3,"sources":["/Users/kognos/Documents/GitHub/ClutRWebsite/actions/ApplicationAction.js"],"names":["firebase","getApplications","return_this","userRef","database","ref","on","snapshot","forEach","childSnapshot","val","applicationDetails","status","objecttoreturn","applicationinfo","Idurl","downloadApplicationImages","key","push","user_id","Frontref","storage","child","Backref","getDownloadURL","then","url","updateApplication","application_id","nameofitemtoupdate","item","update"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP,C,CACA;;AACA;;;AAGA;;AACA,gBAAsBC,eAAtB;AAAA;AAAA;AAqBA;;;;;;;;;0BArBO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,WADD,GACe,EADf;AAECC,YAAAA,OAFD,GAEWH,QAAQ,CAACI,QAAT,GAAoBC,GAApB,CAAwB,gBAAxB,CAFX;AAAA;AAAA,mBAGEF,OAAO,CAACG,EAAR,CAAW,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAoB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGjBA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,aAAa,EAAI;AACrC;AACA,8BAAGA,aAAa,CAACC,GAAd,GAAoBC,kBAApB,CAAuCC,MAAvC,IAAiD,SAAjD,IAA8DH,aAAa,CAACC,GAAd,GAAoBC,kBAApB,CAAuCC,MAAvC,IAAiD,QAAlH,EAA4H;AACzH,gCAAIC,cAAc,GAAC;AAACC,8BAAAA,eAAe,EAACL,aAAa,CAACC,GAAd,GAAoBC,kBAArC;AAAwDI,8BAAAA,KAAK,EAACC,yBAAyB,CAACP,aAAa,CAACQ,GAAf;AAAvF,6BAAnB,CADyH,CAEzH;;AACEf,4BAAAA,WAAW,CAACgB,IAAZ,CAAiBL,cAAjB;AAEJ;AAEH,yBATK,CAHiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApB;;AAAA;AAAA;AAAA;AAAA,gBAHF;;AAAA;AAAA,8CAkBIX,WAlBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA0BP,OAAO,SAASc,yBAAT,CAAmCG,OAAnC,EAA2C;AAC9C,MAAIjB,WAAW,GAAG,EAAlB;AACA,MAAMkB,QAAQ,GAAGpB,QAAQ,CAACqB,OAAT,GAAmBhB,GAAnB,wBAAuCc,OAAvC,GAAkDG,KAAlD,CAAwD,UAAxD,CAAjB;AACA,MAAMC,OAAO,GAAGvB,QAAQ,CAACqB,OAAT,GAAmBhB,GAAnB,wBAAuCc,OAAvC,GAAkDG,KAAlD,CAAwD,SAAxD,CAAhB;AACAF,EAAAA,QAAQ,CAACI,cAAT,GAA0BC,IAA1B,CAA+B,UAACC,GAAD,EAAO;AAACxB,IAAAA,WAAW,CAACgB,IAAZ,CAAiBQ,GAAjB;AAAsB,GAA7D;AACAH,EAAAA,OAAO,CAACC,cAAR,GAAyBC,IAAzB,CAA8B,UAACC,GAAD,EAAO;AAACxB,IAAAA,WAAW,CAACgB,IAAZ,CAAiBQ,GAAjB;AAAsB,GAA5D;AACA,SAAOxB,WAAP;AACC;AAEF,OAAO,SAASyB,iBAAT,CAA2BC,cAA3B,EAA0CC,kBAA1C,EAA6DC,IAA7D,EAAkE;AAGvE,MAAGD,kBAAkB,KAAI,QAAzB,EAAkC;AAChC7B,IAAAA,QAAQ,CAACI,QAAT,GAAoBC,GAApB,wBAAwCuB,cAAxC,0BAA6EG,MAA7E,CAAoF;AAClFnB,MAAAA,MAAM,EAACkB;AAD2E,KAApF;AAGD;AACD","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n//**\n/**\n * This function gets all the current applications\n */\n//\nexport async function getApplications(){\n    var return_this = [];\n    var userRef = firebase.database().ref(\"/applications/\");\n   await userRef.on(\"value\", async snapshot => {\n      //  console.log(\"hi\");\n      \n      await snapshot.forEach(childSnapshot => {\n         //   console.log(childSnapshot.key);\n         if(childSnapshot.val().applicationDetails.status == \"pending\" || childSnapshot.val().applicationDetails.status == \"denied\" ){\n            var objecttoreturn={applicationinfo:childSnapshot.val().applicationDetails,Idurl:downloadApplicationImages(childSnapshot.key)};\n            // console.log(objecttoreturn);\n              return_this.push(objecttoreturn);\n\n         }\n        \n      });\n    });\n  \n    return return_this;\n  }\n\n/**\n * Dowload application uploaded id's\n * @param {*} application_id \n * @param {*} user_id \n */\nexport function downloadApplicationImages(user_id){\n    var return_this = [];\n    const Frontref = firebase.storage().ref(`applications/${user_id}`).child(\"front_id\");\n    const Backref = firebase.storage().ref(`applications/${user_id}`).child(\"back_id\");\n    Frontref.getDownloadURL().then((url)=>{return_this.push(url)} )\n    Backref.getDownloadURL().then((url)=>{return_this.push(url)} )\n    return return_this;\n    }\n\n   export function updateApplication(application_id,nameofitemtoupdate,item){\n   \n   \n     if(nameofitemtoupdate ===\"status\"){\n       firebase.database().ref(`applications/${application_id}/applicationDetails`).update({\n         status:item\n        });\n     }\n    }\n   "]}]}