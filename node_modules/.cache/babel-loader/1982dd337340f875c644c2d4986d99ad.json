{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/thread-loader/dist/cjs.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js??ref--13-0!/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/mixins/image-loader.js","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/mixins/image-loader.js","mtime":1565249865457},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/thread-loader/dist/cjs.js","mtime":1565232945419},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js","mtime":1565232944998}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport { mediaRef } from '@/admin/firebase_config';\nexport default {\n  methods: {\n    uploadImage: function () {\n      var _uploadImage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var _this = this;\n\n        var file, storageRef, snapshot;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                file = e.target.files[0];\n                storageRef = firebase.storage().ref('images/' + file.name);\n                _context.next = 4;\n                return storageRef.put(file);\n\n              case 4:\n                snapshot = _context.sent;\n                this.createNewMedia(snapshot);\n                snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                  _this.insertImageIntoDOM(downloadURL);\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function uploadImage(_x) {\n        return _uploadImage.apply(this, arguments);\n      }\n\n      return uploadImage;\n    }(),\n    createNewMedia: function createNewMedia(snapshot) {\n      snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        mediaRef.push({\n          src: downloadURL,\n          path: snapshot.ref.fullPath,\n          name: snapshot.metadata.name\n        });\n      });\n    },\n    insertImageIntoDOM: function insertImageIntoDOM(url) {\n      var img = document.createElement('img');\n      img.src = url;\n      document.getElementsByClassName('ql-editor')[0].appendChild(img);\n    }\n  }\n};",{"version":3,"sources":["/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/mixins/image-loader.js"],"names":["firebase","mediaRef","methods","uploadImage","e","file","target","files","storageRef","storage","ref","name","put","snapshot","createNewMedia","getDownloadURL","then","downloadURL","insertImageIntoDOM","push","src","path","fullPath","metadata","url","img","document","createElement","getElementsByClassName","appendChild"],"mappings":";;;AAEA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACDC,IAAAA,WADC;AAAA;AAAA;AAAA,+CACYC,CADZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,gBAAAA,IAFC,GAEMD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAFN;AAGDC,gBAAAA,UAHC,GAGYR,QAAQ,CAACS,OAAT,GAAmBC,GAAnB,CAAuB,YAAYL,IAAI,CAACM,IAAxC,CAHZ;AAAA;AAAA,uBAKgBH,UAAU,CAACI,GAAX,CAAeP,IAAf,CALhB;;AAAA;AAKDQ,gBAAAA,QALC;AAOL,qBAAKC,cAAL,CAAoBD,QAApB;AAEAA,gBAAAA,QAAQ,CAACH,GAAT,CAAaK,cAAb,GAA8BC,IAA9B,CAAmC,UAAAC,WAAW,EAAI;AAChD,kBAAA,KAAI,CAACC,kBAAL,CAAwBD,WAAxB;AACD,iBAFD;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaPH,IAAAA,cAbO,0BAaSD,QAbT,EAamB;AACxBA,MAAAA,QAAQ,CAACH,GAAT,CAAaK,cAAb,GAA8BC,IAA9B,CAAmC,UAAAC,WAAW,EAAI;AAChDhB,QAAAA,QAAQ,CAACkB,IAAT,CAAc;AACZC,UAAAA,GAAG,EAAEH,WADO;AAEZI,UAAAA,IAAI,EAAER,QAAQ,CAACH,GAAT,CAAaY,QAFP;AAGZX,UAAAA,IAAI,EAAEE,QAAQ,CAACU,QAAT,CAAkBZ;AAHZ,SAAd;AAKD,OAND;AAOD,KArBM;AAsBPO,IAAAA,kBAtBO,8BAsBaM,GAtBb,EAsBkB;AACvB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,MAAAA,GAAG,CAACL,GAAJ,GAAUI,GAAV;AACAE,MAAAA,QAAQ,CAACE,sBAAT,CAAgC,WAAhC,EAA6C,CAA7C,EAAgDC,WAAhD,CAA4DJ,GAA5D;AACD;AA1BM;AADI,CAAf","sourcesContent":["\n\nimport firebase from 'firebase/app'\nimport 'firebase/storage'\nimport { mediaRef } from '@/admin/firebase_config'\n\nexport default {\n  methods: {\n    async uploadImage (e) {\n      let file = e.target.files[0]\n      let storageRef = firebase.storage().ref('images/' + file.name)\n\n      let snapshot = await storageRef.put(file)\n\n      this.createNewMedia(snapshot)\n\n      snapshot.ref.getDownloadURL().then(downloadURL => {\n        this.insertImageIntoDOM(downloadURL)\n      })\n    },\n    createNewMedia (snapshot) {\n      snapshot.ref.getDownloadURL().then(downloadURL => {\n        mediaRef.push({\n          src: downloadURL,\n          path: snapshot.ref.fullPath,\n          name: snapshot.metadata.name\n        })\n      })\n    },\n    insertImageIntoDOM (url) {\n      let img = document.createElement('img')\n      img.src = url\n      document.getElementsByClassName('ql-editor')[0].appendChild(img)\n    }\n  }\n}\n"]}]}