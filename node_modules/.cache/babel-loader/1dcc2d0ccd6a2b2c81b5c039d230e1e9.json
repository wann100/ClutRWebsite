{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/thread-loader/dist/cjs.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/src/app/templates/NewsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/app/templates/NewsList.vue","mtime":1565240946504},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/thread-loader/dist/cjs.js","mtime":1565232945419},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport appHeader from '@/app/components/appHeader';\nimport appFooter from '@/app/components/appFooter';\nimport pagination from '@/app/components/pagination';\nimport { contentsRef, routesRef } from '@/admin/firebase_config/index';\nimport contentFetch from '@/admin/mixins/contentFetch';\nimport _ from 'lodash';\n\nvar stringContains = function stringContains(search, string) {\n  var strContains = false;\n  stringArr.forEach(function (string) {\n    strContains = string.toLowerCase().includes(search.toLowerCase()) && true;\n  });\n  return strContains;\n};\n\nexport default {\n  mixins: [contentFetch],\n  components: {\n    appHeader: appHeader,\n    appFooter: appFooter,\n    pagination: pagination\n  },\n  firebase: {\n    routes: routesRef,\n    contents: {\n      source: contentsRef,\n      readyCallback: function readyCallback() {\n        this.loaded = true;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      filter: {\n        category: undefined,\n        q: undefined,\n        currentPage: 1\n      },\n      searchQuery: undefined,\n      perPage: 4,\n      // No of news per page\n      loaded: false\n    };\n  },\n  watch: {\n    // Update routes whenenver any filter paramters change\n    filter: {\n      handler: function handler() {\n        this.updateRoute();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    news: function news() {\n      var _this = this;\n\n      var currentRoute = this.routes.filter(function (route) {\n        return route.path === _this.$route.path;\n      })[0];\n      return this.getContentsByType(currentRoute.contentType, true);\n    },\n    filteredNews: function filteredNews() {\n      var searchQuery = this.filter.q;\n      var category = this.filter.category;\n      return _.filter(this.news, function (o) {\n        return (!searchQuery || stringContains(searchQuery, o.title) || stringContains(searchQuery, o.subheadline)) && (!category || stringContains(category, o.category.options));\n      });\n    },\n    currentPageNews: function currentPageNews() {\n      return _.slice(this.filteredNews, this.filter.currentPage - 1, this.filter.currentPage - 1 + this.perPage);\n    },\n    categories: function categories() {\n      var found_categories = {};\n      this.news.forEach(function (news) {\n        if (_.isEmpty(found_categories)) {\n          found_categories = _.countBy(news.category.options, function (option) {\n            return option;\n          });\n        } else {\n          var currNewsCat = _.countBy(news.category.options, function (option) {\n            return option;\n          }); //comparing current categories with the new posts categories and makes chages accordingly\n\n\n          Object.keys(found_categories).forEach(function (keyCat) {\n            Object.keys(currNewsCat).forEach(function (keyCurCat) {\n              if (keyCat === keyCurCat) {\n                found_categories[keyCat] = found_categories[keyCat] + currNewsCat[keyCurCat];\n              } else if (!(keyCurCat in found_categories)) {\n                found_categories[keyCurCat] = currNewsCat[keyCurCat];\n              }\n            });\n          });\n        }\n      });\n      return found_categories;\n    },\n    query: function query() {\n      return this.$route.query;\n    }\n  },\n  mounted: function mounted() {\n    this.filter.currentPage = parseInt(_.get(this.query, 'page', 1));\n    this.filter.category = _.get(this.query, 'category');\n    this.filter.q = _.get(this.query, 'q');\n  },\n  methods: {\n    search: function search() {\n      this.filter.q = this.searchQuery;\n    },\n    changeCategory: function changeCategory(category) {\n      this.filter.currentPage = 1;\n      this.filter.category = category.toLowerCase();\n    },\n    changePage: function changePage(toPage) {\n      this.filter.currentPage = toPage;\n    },\n    updateRoute: function updateRoute() {\n      this.$router.replace({\n        query: {\n          q: this.filter.q,\n          category: this.filter.category,\n          page: this.filter.currentPage\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["NewsList.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- this is an example of a dynamic template. -->\n<!-- To use this template you will need a content type which has following fields\n    img\n    title\n    subheadline\n    body\n    category\n    date\n  -->\n<template>\n  <div class=\"page-news-list\">\n    <app-header></app-header>\n\n    <div class=\"news-list\">\n      <div class=\"container\">\n        <div class=\"clearfix\">\n          <div class=\"leftbar\">\n            <h2 class=\"is-heading\">Latest News Entries</h2>\n          </div>\n\n          <div class=\"rightbar\">\n            <div class=\"search-box form-icon-wrapper\">\n              <input @keydown.enter=\"search\" v-model=\"searchQuery\" class=\"form-control\" placeholder=\"Search...\">\n\n              <button @click=\"search\">\n                <i class=\"fa fa-arrow-right\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"clearfix news-listing-box\">\n          <div class=\"leftbar\">\n            <div v-if=\"loaded === false\">\n              <h4>Loading News.. Please wait..</h4>\n            </div>\n            <div v-else-if=\"currentPageNews && currentPageNews.length > 0\">\n              <div v-for=\"newsItem in currentPageNews\" :key=\"newsItem['.key']\" class=\"news\">\n                <img :src=\"newsItem.img || require('@/app/assets/img/coast.jpg')\" class=\"responsive-image\">\n                <div class=\"news-preview-content\">\n                  <h2 class=\"news-title\" v-if=\"newsItem.title\" v-text=\"newsItem.title\"></h2>\n                  <p v-if=\"newsItem.subheadline\" v-text=\"newsItem.subheadline\"></p>\n                  <router-link :to=\"$route.path + '/' + (newsItem.slug ? newsItem.slug : newsItem['.key'])\" class=\"btn is-small\">Read more</router-link>\n                </div>\n              </div>\n\n              <pagination :totalItems=\"filteredNews.length\" :perPage=\"perPage\" :currentPage=\"filter.currentPage\" @changePage=\"changePage\">\n              </pagination>\n            </div>\n            <div v-else>\n              No News Found\n            </div>\n          </div>\n\n          <div class=\"rightbar\">\n            <h3 class=\"is-subheading\">Search By Topic</h3>\n\n            <ul v-if=\"categories\" class=\"topic-list\">\n              <li v-for=\"(count, category) in categories\" :key=\"category\">\n                <a @click=\"changeCategory(category)\">{{ category }} <span class=\"count\">({{ count }})</span></a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <app-footer></app-footer>\n  </div>\n</template>\n\n<script>\nimport appHeader from '@/app/components/appHeader'\nimport appFooter from '@/app/components/appFooter'\nimport pagination from '@/app/components/pagination'\nimport { contentsRef, routesRef } from '@/admin/firebase_config/index'\nimport contentFetch from '@/admin/mixins/contentFetch'\nimport _ from 'lodash'\n\nconst stringContains = (search, string) => {\n  let strContains = false\n  stringArr.forEach(string => {\n    strContains = string.toLowerCase().includes(search.toLowerCase()) && true\n  })\n  return strContains\n}\n\nexport default {\n  mixins: [contentFetch],\n  components: {\n    appHeader,\n    appFooter,\n    pagination\n  },\n  firebase: {\n    routes: routesRef,\n    contents: {\n      source: contentsRef,\n      readyCallback: function () {\n        this.loaded = true\n      }\n    }\n  },\n  data () {\n    return {\n      filter: {\n        category: undefined,\n        q: undefined,\n        currentPage: 1\n      },\n      searchQuery: undefined,\n      perPage: 4, // No of news per page\n      loaded: false\n    }\n  },\n  watch: {\n    // Update routes whenenver any filter paramters change\n    filter: {\n      handler: function () {\n        this.updateRoute()\n      },\n      deep: true\n    }\n  },\n  computed: {\n    news () {\n      let currentRoute = this.routes.filter((route) => {\n        return route.path === this.$route.path\n      })[0]\n\n      return this.getContentsByType(currentRoute.contentType, true)\n    },\n    filteredNews () {\n      const searchQuery = this.filter.q\n      const category = this.filter.category\n\n      return _.filter(this.news, function (o) {\n        return (!searchQuery || (stringContains(searchQuery, o.title) || stringContains(searchQuery, o.subheadline))) &&\n               (!category || (stringContains(category, o.category.options)))\n      })\n    },\n    currentPageNews () {\n      return _.slice(this.filteredNews, this.filter.currentPage - 1, (this.filter.currentPage - 1) + this.perPage)\n    },\n    categories () {\n      let found_categories = {}\n      this.news.forEach(news => {\n        if(_.isEmpty(found_categories)) {\n          found_categories = _.countBy(news.category.options, function(option){\n            return option\n          })\n        } else {\n          let currNewsCat =  _.countBy(news.category.options, function(option){\n            return option\n          })\n          //comparing current categories with the new posts categories and makes chages accordingly\n          Object.keys(found_categories).forEach(keyCat => {\n            Object.keys(currNewsCat).forEach(keyCurCat => {\n              if(keyCat === keyCurCat){\n                found_categories[keyCat] = found_categories[keyCat] + currNewsCat[keyCurCat]\n              } else if(!(keyCurCat in found_categories)){\n                found_categories[keyCurCat] = currNewsCat[keyCurCat]\n              }\n            })\n          })\n        }\n      })\n      return found_categories\n    },\n    query () {\n      return this.$route.query\n    }\n  },\n  mounted () {\n    this.filter.currentPage = parseInt(_.get(this.query, 'page', 1))\n    this.filter.category = _.get(this.query, 'category')\n    this.filter.q = _.get(this.query, 'q')\n  },\n  methods: {\n    search () {\n      this.filter.q = this.searchQuery\n    },\n    changeCategory (category) {\n      this.filter.currentPage = 1\n      this.filter.category = category.toLowerCase()\n    },\n    changePage (toPage) {\n      this.filter.currentPage = toPage\n    },\n    updateRoute () {\n      this.$router.replace({ query: { q: this.filter.q, category: this.filter.category, page: this.filter.currentPage } })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/app/styles/index.scss';\n</style>\n"],"sourceRoot":"src/app/templates"}]}