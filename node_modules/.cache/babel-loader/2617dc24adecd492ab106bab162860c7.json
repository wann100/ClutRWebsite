{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js??ref--13-0!/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js","mtime":1565817137046},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js","mtime":1565232944998}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport firebase from \"firebase/app\";\nexport function getusers() {}\nexport function updateUserDetails(currentUser, whichdetails, details) {\n  //const { currentUser } = firebase.auth();\n  //console.log(currentUser.uid);\n  switch (whichdetails) {\n    case \"cleanermode\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        cleanermode: details\n      });\n      break;\n\n    case \"lookingforwork\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        lookingforwork: details\n      });\n      break;\n\n    case \"points\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        points: details\n      });\n      break;\n\n    case \"currentlong\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        currentlong: details\n      });\n      break;\n\n    case \"currentlat\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        currentlat: details\n      });\n      break;\n\n    case \"workwithcleaners\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        workwithcleaners: details\n      });\n      break;\n\n    case \"currentappointmentid\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        currentappointmentid: details\n      });\n      break;\n\n    case \"cleanercurrentap\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        cleanercurrentapid: details\n      });\n      break;\n\n    case \"plaidtoken\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        plaid_token: details\n      });\n      break;\n\n    case \"institutionname\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        institution_name: details\n      });\n      break;\n\n    case \"institutionid\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        institution_id: details\n      });\n      break;\n\n    case \"plaidaccountnumber\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        plaid_last_four: details\n      });\n      break;\n\n    case \"plaidaccounttype\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        plaid_account_type: details\n      });\n      break;\n\n    case \"plaidaccountid\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        plaid_account_id: details\n      });\n      break;\n\n    case \"numberofappointmentscompleted\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        numofapptcompleted: details\n      });\n      break;\n\n    case \"isCleaner\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        isCleaner: String(details)\n      });\n      break;\n\n    case \"firstname\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        firstname: details\n      });\n      break;\n\n    case \"lastname\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        lastname: details\n      });\n      break;\n\n    case \"phone\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        phone: details\n      });\n      break;\n\n    case \"points\":\n      firebase.database().ref(\"/users/\".concat(currentUser.uid, \"/userDetails\")).update({\n        points: details\n      });\n      break;\n  }\n}\nexport function userDetailsFetch() {\n  var return_this = [];\n  var currentUser = firebase.auth().currentUser;\n  var userRef = firebase.database().ref(\"/users/\"); //console.log(\"hi\")\n\n  userRef.on(\"value\", function (snapshot) {\n    // console.log(\"hi\");\n    snapshot.forEach(function (childSnapshot) {\n      // childSnapshot.forEach((smallerChildSnapshot) => {\n      //console.log(\"hi\");\n      if (childSnapshot.val().userDetails.role !== \"admin\") {\n        //console.log(childSnapshot.val().userDetails.role)\n        return_this.push(childSnapshot.val());\n      } // });\n\n    });\n  });\n  return return_this;\n}\nexport function getUser(userid) {\n  var return_this = []; //var currentUser = firebase.auth().currentUser;\n\n  var userRef = firebase.database().ref(\"/users/\".concat(userid, \"/userDetails\"));\n  userRef.on(\"value\", function (snapshot) {\n    return_this.push(snapshot.val());\n  });\n  return return_this;\n}",{"version":3,"sources":["/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js"],"names":["firebase","getusers","updateUserDetails","currentUser","whichdetails","details","database","ref","uid","update","cleanermode","lookingforwork","points","currentlong","currentlat","workwithcleaners","currentappointmentid","cleanercurrentapid","plaid_token","institution_name","institution_id","plaid_last_four","plaid_account_type","plaid_account_id","numofapptcompleted","isCleaner","String","firstname","lastname","phone","userDetailsFetch","return_this","auth","userRef","on","snapshot","forEach","childSnapshot","val","userDetails","role","push","getUser","userid"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\n\nexport function getusers() {}\n\nexport function updateUserDetails(currentUser,whichdetails,details) {\n  //const { currentUser } = firebase.auth();\n  //console.log(currentUser.uid);\n  switch (whichdetails) {\n    case \"cleanermode\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          cleanermode: details\n        });\n      break;\n    case \"lookingforwork\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          lookingforwork: details\n        });\n      break;\n    case \"points\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          points: details\n        });\n      break;\n    case \"currentlong\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          currentlong: details\n        });\n      break;\n    case \"currentlat\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          currentlat: details\n        });\n      break;\n    case \"workwithcleaners\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          workwithcleaners: details\n        });\n      break;\n    case \"currentappointmentid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          currentappointmentid: details\n        });\n      break;\n    case \"cleanercurrentap\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          cleanercurrentapid: details\n        });\n      break;\n    case \"plaidtoken\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          plaid_token: details\n        });\n      break;\n    case \"institutionname\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          institution_name: details\n        });\n      break;\n    case \"institutionid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          institution_id: details\n        });\n      break;\n    case \"plaidaccountnumber\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          plaid_last_four: details\n        });\n      break;\n    case \"plaidaccounttype\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          plaid_account_type: details\n        });\n      break;\n\n    case \"plaidaccountid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          plaid_account_id: details\n        });\n      break;\n\n    case \"numberofappointmentscompleted\":\n      firebase\n        .database()\n        .ref(`/users/${currentUser.uid}/userDetails`)\n        .update({\n          numofapptcompleted: details\n        });\n      break;\n      case \"isCleaner\":\n        firebase\n          .database()\n          .ref(`/users/${currentUser.uid}/userDetails`)\n          .update({\n            isCleaner: String(details)\n          });\n        break;\n      case \"firstname\":\n        firebase\n          .database()\n          .ref(`/users/${currentUser.uid}/userDetails`)\n          .update({\n            firstname: details\n          });\n        break;\n      case \"lastname\":\n        firebase\n          .database()\n          .ref(`/users/${currentUser.uid}/userDetails`)\n          .update({\n            lastname: details\n          });\n        break;\n        case \"phone\":\n          firebase\n            .database()\n            .ref(`/users/${currentUser.uid}/userDetails`)\n            .update({\n              phone: details\n            });\n          break;\n          case \"points\":\n            firebase\n              .database()\n              .ref(`/users/${currentUser.uid}/userDetails`)\n              .update({\n                points: details\n              });\n            break;\n  }\n}\n\nexport function userDetailsFetch() {\n  var return_this = [];\n  var currentUser = firebase.auth().currentUser;\n  var userRef = firebase.database().ref(\"/users/\");\n  //console.log(\"hi\")\n  userRef.on(\"value\", snapshot => {\n   // console.log(\"hi\");\n    snapshot.forEach(childSnapshot => {\n      // childSnapshot.forEach((smallerChildSnapshot) => {\n      //console.log(\"hi\");\n      if (childSnapshot.val().userDetails.role !== \"admin\") {\n        //console.log(childSnapshot.val().userDetails.role)\n\n        return_this.push(childSnapshot.val());\n      }\n\n      // });\n    });\n  });\n\n  return return_this;\n}\nexport function getUser(userid) {\n   var return_this = [];\n    //var currentUser = firebase.auth().currentUser;\n    var userRef =   firebase.database().ref(`/users/${userid}/userDetails`) ;\n    userRef.on(\"value\", snapshot => {\n\n        return_this.push(snapshot.val());\n}  );\n  \n    return return_this;\n  }\n  "]}]}