{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js??ref--13-0!/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js","mtime":1565361328456},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/eslint-loader/index.js","mtime":1565232944998}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport firebase from \"firebase/app\";\nexport function getusers() {}\nexport function updateUserDetails(currentUseruid) {\n  //const { currentUser } = firebase.auth();\n  switch (whichdetails) {\n    case \"cleanermode\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        cleanermode: details\n      });\n      break;\n\n    case \"lookingforwork\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        lookingforwork: details\n      });\n      break;\n\n    case \"points\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        points: details\n      });\n      break;\n\n    case \"currentlong\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        currentlong: details\n      });\n      break;\n\n    case \"currentlat\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        currentlat: details\n      });\n      break;\n\n    case \"workwithcleaners\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        workwithcleaners: details\n      });\n      break;\n\n    case \"currentappointmentid\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        currentappointmentid: details\n      });\n      break;\n\n    case \"cleanercurrentap\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        cleanercurrentapid: details\n      });\n      break;\n\n    case \"plaidtoken\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        plaid_token: details\n      });\n      break;\n\n    case \"institutionname\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        institution_name: details\n      });\n      break;\n\n    case \"institutionid\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        institution_id: details\n      });\n      break;\n\n    case \"plaidaccountnumber\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        plaid_last_four: details\n      });\n      break;\n\n    case \"plaidaccounttype\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        plaid_account_type: details\n      });\n      break;\n\n    case \"plaidaccountid\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        plaid_account_id: details\n      });\n      break;\n\n    case \"numberofappointmentscompleted\":\n      firebase.database().ref(\"/users/\".concat(currentUseruid, \"/userDetails\")).update({\n        numofapptcompleted: details\n      });\n      break;\n  }\n}\nexport function userDetailsFetch(return_this) {\n  return_this = [];\n  var userRef = firebase.database().ref(\"/users/\"); //console.log(\"hi\")\n\n  userRef.on(\"value\", function (snapshot) {\n    console.log(\"hi\");\n    snapshot.forEach(function (childSnapshot) {\n      // childSnapshot.forEach((smallerChildSnapshot) => {\n      console.log(\"hi\");\n\n      if (childSnapshot.val().userDetails.role !== \"admin\") {\n        //console.log(childSnapshot.val().userDetails.role)\n        return_this.push(childSnapshot.val());\n      } // });\n\n    });\n  });\n  return return_this;\n}",{"version":3,"sources":["/Users/kognos/Documents/GitHub/ClutRWebsite/actions/UserAction.js"],"names":["firebase","getusers","updateUserDetails","currentUseruid","whichdetails","database","ref","update","cleanermode","details","lookingforwork","points","currentlong","currentlat","workwithcleaners","currentappointmentid","cleanercurrentapid","plaid_token","institution_name","institution_id","plaid_last_four","plaid_account_type","plaid_account_id","numofapptcompleted","userDetailsFetch","return_this","userRef","on","snapshot","console","log","forEach","childSnapshot","val","userDetails","role","push"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\n\nexport function getusers() {}\n\nexport function updateUserDetails(currentUseruid) {\n  //const { currentUser } = firebase.auth();\n\n  switch (whichdetails) {\n    case \"cleanermode\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          cleanermode: details\n        });\n      break;\n    case \"lookingforwork\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          lookingforwork: details\n        });\n      break;\n    case \"points\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          points: details\n        });\n      break;\n    case \"currentlong\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          currentlong: details\n        });\n      break;\n    case \"currentlat\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          currentlat: details\n        });\n      break;\n    case \"workwithcleaners\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          workwithcleaners: details\n        });\n      break;\n    case \"currentappointmentid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          currentappointmentid: details\n        });\n      break;\n    case \"cleanercurrentap\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          cleanercurrentapid: details\n        });\n      break;\n    case \"plaidtoken\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          plaid_token: details\n        });\n      break;\n    case \"institutionname\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          institution_name: details\n        });\n      break;\n    case \"institutionid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          institution_id: details\n        });\n      break;\n    case \"plaidaccountnumber\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          plaid_last_four: details\n        });\n      break;\n    case \"plaidaccounttype\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          plaid_account_type: details\n        });\n      break;\n\n    case \"plaidaccountid\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          plaid_account_id: details\n        });\n      break;\n\n    case \"numberofappointmentscompleted\":\n      firebase\n        .database()\n        .ref(`/users/${currentUseruid}/userDetails`)\n        .update({\n          numofapptcompleted: details\n        });\n      break;\n  }\n}\n\nexport function userDetailsFetch(return_this) {\n  return_this = [];\n  var userRef = firebase.database().ref(\"/users/\");\n  //console.log(\"hi\")\n  userRef.on(\"value\", snapshot => {\n    console.log(\"hi\");\n    snapshot.forEach(childSnapshot => {\n      // childSnapshot.forEach((smallerChildSnapshot) => {\n      console.log(\"hi\");\n      if (childSnapshot.val().userDetails.role !== \"admin\") {\n        //console.log(childSnapshot.val().userDetails.role)\n\n        return_this.push(childSnapshot.val());\n      }\n\n      // });\n    });\n  });\n\n  return return_this;\n}\n"]}]}