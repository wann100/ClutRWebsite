{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Applications.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Applications.vue","mtime":1565710277874},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport { getApplications, downloadApplicationImages, getUser, updateUserDetails, updateApplication } from \"@/../actions\";\nimport notifier from \"@/admin/mixins/notifier\";\nimport { settingsRef, mediaRef, navRef, contentsRef, fieldsRef, routesRef, usersRef } from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\nexport default {\n  data: function data() {\n    return {\n      applications: null,\n      currentUser: firebase.auth().currentUser,\n      list_used_to_hide_info: []\n    };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n  methods: {\n    /**\n     * This function gets the applications that are not approved\n     */\n    gettheApplications: function () {\n      var _gettheApplications = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var i, size, item;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getApplications();\n\n              case 2:\n                this.applications = _context.sent;\n\n                // var objectcontaininghiddennornot;\n                //console.log(this.applications.length);\n                // console.log(this.users);\n                if (this.applications != null) {\n                  this.showNotification('success', 'applications have been downloaded');\n\n                  for (i = 0, size = this.applications.length; i < size; i++) {\n                    item = {\n                      hidden: true\n                    };\n                    this.list_used_to_hide_info.push(item); //alert(item);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function gettheApplications() {\n        return _gettheApplications.apply(this, arguments);\n      }\n\n      return gettheApplications;\n    }(),\n\n    /**\n     * This is called in order to approve applcation\n     */\n    ApproveApplication: function () {\n      var _ApproveApplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(currentUser, whichdetails, details) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //First update usersdetails so that they can login\n                console.log(currentUser[0].uid);\n                _context2.next = 3;\n                return updateUserDetails(currentUser[0], whichdetails, details);\n\n              case 3:\n                _context2.next = 5;\n                return updateApplication(currentUser[0].uid, \"status\", 'approved');\n\n              case 5:\n                //Then update the screen by re loading the applications back in\n                this.showNotification('success', 'Application has been approved');\n                this.gettheApplications();\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function ApproveApplication(_x, _x2, _x3) {\n        return _ApproveApplication.apply(this, arguments);\n      }\n\n      return ApproveApplication;\n    }(),\n\n    /**\n      * This is called in order to deny applcation\n      */\n    DenyApplication: function () {\n      var _DenyApplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(currentUser, whichdetails, details) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return updateApplication(currentUser[0].uid, \"status\", 'denied');\n\n              case 2:\n                //Then update the screen by re loading the applications back in\n                this.showNotification('success', 'Application has been denied');\n                this.gettheApplications();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function DenyApplication(_x4, _x5, _x6) {\n        return _DenyApplication.apply(this, arguments);\n      }\n\n      return DenyApplication;\n    }(),\n\n    /**\n     * So that we can call this function inside of our template\n     */\n    getuserinfo: function getuserinfo(userid_input) {\n      return getUser(userid_input);\n    }\n  },\n\n  /**\n  *Loads pending applications when screen loads\n  */\n  beforeMount: function beforeMount() {\n    this.gettheApplications();\n  }\n};",{"version":3,"sources":["Applications.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n   <div class=\"container\">\n    <!-- notification -->\n    <transition mode=\"out-in\" name=\"fade\">\n      <div v-if=\"notification.message\" :class=\"'notification is-' + notification.type\">\n        <button class=\"delete\" @click=\"hideNotifications\"></button>\n        {{notification.message}}\n      </div>\n    </transition>\n\n\n    <h2>APPLICATIONS</h2>\n    <div class=\"box\">\n      <div class=\"columns\">\n        <div class=\"column\">\n        <input class=\"searchbox\" type=\"text\" placeholder=\"Search..\">\n <div>\n \n</div>\n <a class=\"img-container\" v-for=\"(item, key) in applications\" :key=\"key\"   >\n<!--  This is how you create a collapsible list using the key and array !-->\n         <b-button    v-b-toggle=\"'collapse-'+key\"  variant=\"primary\">View/Approve: {{item.applicationinfo.name}}</b-button>       \n   <b-collapse    :id=\"'collapse-'+key\"  >\n    <b-card>\n       <div class=\"columns\"  >\n         <div class=\"column\" style=\"margin:10px\">\n           \n           <h3>Name: {{item.applicationinfo.name}}</h3>\n           <h3>DOB: {{item.applicationinfo.dob}}</h3>\n           <h3>SSN:{{item.applicationinfo.ssn}}</h3>\n           <h3>Team Size:{{item.applicationinfo.num_team}}</h3>\n           <h3>Status:{{item.applicationinfo.status}}</h3>\n            <b-button variant=\"primary\" @click=\"ApproveApplication(getuserinfo(item.applicationinfo.id),'isCleaner',true)\" >Approve </b-button>\n         <b-button variant=\"danger\" @click=\"DenyApplication(getuserinfo(item.applicationinfo.id),'isCleaner',false)\" >Deny </b-button>\n         </div>\n         <div class=\"column\">\n           <h1 style=\"margin:10px\">Front of Id</h1>\n        <img class=\"idbox\"  :src=\"item.Idurl[1]\" />\n        </div>\n         <div class=\"column\">\n           <h1 style=\"margin:10px\" >Back of Id</h1>\n         <img class=\"idbox\" :src=\"item.Idurl[0]\" />\n         </div>\n         </div>\n  \n    </b-card></b-collapse> </a>\n\n    \n        </div>\n      </div>\n    </div>\n\n\n</div>\n\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport {getApplications,downloadApplicationImages,getUser,updateUserDetails,updateApplication} from \"@/../actions\"\nimport notifier from \"@/admin/mixins/notifier\";\nimport {\n  settingsRef,\n  mediaRef,\n  navRef,\n  contentsRef,\n  fieldsRef,\n  routesRef,\n  usersRef\n} from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\n\nexport default {\n  data() {\n    return { \n        applications:null,\n        currentUser: firebase.auth().currentUser,\n        list_used_to_hide_info:[],\n\n\n     };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n  \n  methods: {\n    /**\n     * This function gets the applications that are not approved\n     */\n    async gettheApplications(){\n\n        this.applications = await getApplications();\n       // var objectcontaininghiddennornot;\n        //console.log(this.applications.length);\n        \n       // console.log(this.users);\n        if(this.applications!=null){\n            this.showNotification('success', 'applications have been downloaded')\n            for(var i = 0, size = this.applications.length; i < size ; i++){\n          var item = {hidden:true};\n          this.list_used_to_hide_info.push(item);\n          //alert(item);\n\n        }\n        }\n\n    },\n    /**\n     * This is called in order to approve applcation\n     */\n    async ApproveApplication(currentUser,whichdetails,details){\n      //First update usersdetails so that they can login\n       console.log(currentUser[0].uid)\n        await  updateUserDetails(currentUser[0],whichdetails,details);\n      //Then update the application status so that it doesnt show up on this menu\n       await   updateApplication(currentUser[0].uid,\"status\",'approved');\n          //Then update the screen by re loading the applications back in\n          this.showNotification('success', 'Application has been approved')\n          this.gettheApplications();\n },\n   /**\n     * This is called in order to deny applcation\n     */\n    async DenyApplication(currentUser,whichdetails,details){\n      //Then update the application status so that it doesnt show up on this menu\n       await   updateApplication(currentUser[0].uid,\"status\",'denied');\n          //Then update the screen by re loading the applications back in\n          this.showNotification('success', 'Application has been denied')\n          this.gettheApplications();\n },\n\n /**\n  * So that we can call this function inside of our template\n  */\n  getuserinfo(userid_input){\n    return getUser(userid_input);\n },\n\n  },\n   /**\n  *Loads pending applications when screen loads\n  */\n   beforeMount(){\n    this.gettheApplications()\n },\n\n\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.column > div {\n  margin-top: 15px;\n  &:first-child {\n    margin-top: 0px;\n  }\n}\n\nbutton {\n  vertical-align: middle !important;\n  margin-left: 30px;\n}\n\n.idbox{\n  width:250px;\n  height:250px;\n\n}\n\n.searchbox {\n    width:40%;\n    font-weight: bold;\n    border-radius: 5px\n}\n</style>\n"],"sourceRoot":"src/admin/pages"}]}