{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Appointments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Appointments.vue","mtime":1565728562965},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport { getAppointments, getUser, updateAppointment } from \"@/../actions\";\nimport notifier from \"@/admin/mixins/notifier\";\nimport { settingsRef, mediaRef, navRef, contentsRef, fieldsRef, routesRef, usersRef } from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\nexport default {\n  data: function data() {\n    return {\n      appointments: null,\n      currentUser: firebase.auth().currentUser\n    };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n  methods: {\n    getAllAppointments: function getAllAppointments(filter) {\n      this.appointments = getAppointments(filter); // console.log(this.users);\n\n      if (this.applications != null) {\n        this.showNotification('success', 'appointments have been downloaded');\n      }\n    },\n    ApproveAppointments: function ApproveAppointments() {},\n    updateappointments: function updateappointments(appointment_id, nameofitemtoupdate, item) {\n      updateAppointment(appointment_id, nameofitemtoupdate, item);\n      this.getAllAppointments(\"approved\");\n    },\n    FilterFunction: function FilterFunction(filter_criteria) {},\n    getuser: function getuser(userid) {\n      return getUser(userid);\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.getAllAppointments(\"approved\");\n  }\n};",{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,kBAAA;AACA,SAAA,QAAA,QAAA,yBAAA;AACA,SAAA,eAAA,EAAA,OAAA,EAAA,iBAAA,QAAA,cAAA;AACA,OAAA,QAAA,MAAA,yBAAA;AAEA,SACA,WADA,EAEA,QAFA,EAGA,MAHA,EAIA,WAJA,EAKA,SALA,EAMA,SANA,EAOA,QAPA,QAQA,yBARA;AASA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,QAAA,CAAA,IAAA,GAAA;AAFA,KAAA;AAMA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,WADA;AAEA,IAAA,KAAA,EAAA,QAFA;AAGA,IAAA,GAAA,EAAA,MAHA;AAIA,IAAA,MAAA,EAAA,SAJA;AAKA,IAAA,QAAA,EAAA,WALA;AAMA,IAAA,MAAA,EAAA;AANA,GATA;AAiBA,EAAA,MAAA,EAAA,CAAA,QAAA,CAjBA;AAkBA,EAAA,OAAA,EAAA;AAEA,IAAA,kBAFA,8BAEA,MAFA,EAEA;AAEA,WAAA,YAAA,GAAA,eAAA,CAAA,MAAA,CAAA,CAFA,CAGA;;AACA,UAAA,KAAA,YAAA,IAAA,IAAA,EAAA;AACA,aAAA,gBAAA,CAAA,SAAA,EAAA,mCAAA;AACA;AAEA,KAVA;AAWA,IAAA,mBAXA,iCAWA,CAEA,CAbA;AAeA,IAAA,kBAfA,8BAeA,cAfA,EAeA,kBAfA,EAeA,IAfA,EAeA;AACA,MAAA,iBAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,IAAA,CAAA;AACA,WAAA,kBAAA,CAAA,UAAA;AAEA,KAnBA;AAoBA,IAAA,cApBA,0BAoBA,eApBA,EAoBA,CAEA,CAtBA;AAuBA,IAAA,OAvBA,mBAuBA,MAvBA,EAuBA;AAEA,aAAA,OAAA,CAAA,MAAA,CAAA;AACA;AA1BA,GAlBA;AA+CA,EAAA,WA/CA,yBA+CA;AACA,SAAA,kBAAA,CAAA,UAAA;AACA;AAjDA,CAAA","sourcesContent":["<template>\n   <div class=\"container\">\n    <!-- notification -->\n    <transition mode=\"out-in\" name=\"fade\">\n      <div v-if=\"notification.message\" :class=\"'notification is-' + notification.type\">\n        <button class=\"delete\" @click=\"hideNotifications\"></button>\n        {{notification.message}}\n      </div>\n    </transition>\n\n    <h2>Appointments</h2>\n    <div class=\"box\" >\n      <div class=\"columns\">\n        <div class=\"column\">\n        <input class=\"searchbox\" type=\"text\" placeholder=\"Search..\">\n <!-- how you get the userimage {{ this.applications[0].Idurl[0] }} !-->\n    \n    </div>\n        </div>\n    <a class=\"img-container\" v-for=\"(item, key) in appointments\" :key=\"key\"   >\n<!--  This is how you create a collapsible list using the key and array !-->\n <div class=\"columns\">\n         <b-button class=\"buttonstyle\"   v-b-toggle=\"'collapse-'+key\"  variant=\"primary\">View: {{item.id}}</b-button>    \n         </div>   \n   <b-collapse    :id=\"'collapse-'+key\"  >\n    <b-card>\n        <div class=\"columns\">\n            \n               <div class=\"column\">\n                <h6>customerid:</h6>\n                <h6>{{item.customerId}}</h6>\n                                   <quick-edit class=\"cleanerid\" @input=\"updateappointments(item.id,'cleaner_ID_1',item.customerId)\" v-model=\"item.customerId\"></quick-edit>\n\n                \n            </div>\n               <div class=\"column\">\n                <h6>cleanerid:</h6>\n                   <quick-edit class=\"cleanerid\" @input=\"updateappointments(item.id,'cleaner_ID_1',item.cleaner_ID_1)\" v-model=\"item.cleaner_Id_1\"></quick-edit>\n            </div>\n            <div class=\"column\">\n                <h6>Status:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'status',item.status)\" v-model=\"item.status\"></quick-edit>\n            </div>\n            <div class=\"column\">\n                <h6>listup</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'checklistsubmitted',item.checklistsubmitted)\"  type=\"boolean\" v-model=\"item.checklistsubmitted\"></quick-edit>\n            </div>\n               \n                    <div class=\"column\">\n                <h6>Service:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'service',item.service)\" v-model=\"item.servicename\"></quick-edit>\n            </div>\n            <div class=\"column\">\n                <h6>DateofRequest:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'dateofAppointmentRequest',item.dateofAppointmentRequest)\" v-model=\"item.dateofAppointmentRequest\"></quick-edit>\n            </div>\n\n                 <div class=\"column\">\n                <h6>TimeofRequest:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'timeofappointmentRequest',item.timeofappointmentRequest)\" v-model=\"item.timeofappointmentRequest\"></quick-edit>\n            </div>\n                <div class=\"column\">\n                <h6>Rating:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'timeofappointmentRequest',item.rating)\"  v-model=\"item.rating\"></quick-edit>\n            </div>\n              <div class=\"column\">\n                <h6>price:</h6>\n                <quick-edit @input=\"updateappointments(item.id,'price',item.price)\"  v-model=\"item.price\"></quick-edit>\n            </div>\n             <div class=\"column\">\n                <h6>customerphone:</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'customerPhone',item.customerPhone)\"  v-model=\"item.customerPhone\"></quick-edit>\n            </div>\n           \n        </div>\n <div class=\"columns\">\n      \n          <div class=\"column\">\n                <h6>Address:</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'property_address',item.property_address)\"  v-model=\"item.property_address\"></quick-edit>\n            </div>\n             <div class=\"column\">\n                <h6>Type of Property:</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'typeof',item.typeof)\"  v-model=\"item.typeof\"></quick-edit>\n            </div>\n                  <div class=\"column\">\n                <h6>lockbox code:</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'lockboxcode',item.lockboxcode)\"   v-model=\"item.lockboxcode\"></quick-edit>\n            </div>\n              <div class=\"column\">\n                <h6>Number of bathrooms:</h6>\n                <quick-edit   @input=\"updateappointments(item.id,'numberofbathrooms',item.numberofbathrooms)\"  v-model=\"item.numberofbathrooms\"></quick-edit>\n            </div>\n            <div class=\"column\">\n                <h6>Number of bedrooms:</h6>\n                <quick-edit  @input=\"updateappointments(item.id,'numberofbedrooms',item.numberofbedrooms)\"  v-model=\"item.numberofbedrooms\"></quick-edit>\n            </div>\n            </div>\n             </b-card></b-collapse> </a>\n        \n      </div>\n    </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport {getAppointments,getUser,updateAppointment} from \"@/../actions\"\nimport notifier from \"@/admin/mixins/notifier\";\n\nimport {\n  settingsRef,\n  mediaRef,\n  navRef,\n  contentsRef,\n  fieldsRef,\n  routesRef,\n  usersRef\n} from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\n\nexport default {\n  data() {\n    return { \n        appointments:null,\n        currentUser: firebase.auth().currentUser,\n\n\n     };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n  methods: {\n\n    getAllAppointments(filter){\n\n        this.appointments = getAppointments(filter);\n       // console.log(this.users);\n        if(this.applications!=null){\n            this.showNotification('success', 'appointments have been downloaded')\n        }\n\n    },\n    ApproveAppointments(){\n\n    },\n\n        updateappointments(appointment_id,nameofitemtoupdate,item){\n            updateAppointment(appointment_id,nameofitemtoupdate,item);\n            this.getAllAppointments(\"approved\")\n\n    },\n    FilterFunction(filter_criteria){\n\n    },\n    getuser(userid){\n\n        return getUser(userid);\n    }\n\n  },\n   beforeMount(){\n    this.getAllAppointments(\"approved\")\n },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.column > div {\n  margin-top: 35px;\n  &:first-child {\n    margin-top: 0px;\n  }\n}\n\nbutton {\n  vertical-align: middle !important;\n  margin-left: 30px;\n}\n\n.searchbox {\n    width:40%;\n    font-weight: bold;\n    border-radius: 5px\n}\n.box{\n    width:120%;\n    margin-left:-10%;\n}\n.column{\n    text-align: center;\n    \n    \n}\n \n\n.columns{\n    margin-top:40px;\n\n}\n.cleanerid{\n    font-size:3mm;\n}\nh4{\nfont-size:4mm\n}\n\n\n</style>\n"],"sourceRoot":"src/admin/pages"}]}