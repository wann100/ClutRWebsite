{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/admin/pages/Users.vue","mtime":1567011373790},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport { updateUserDetails, userDetailsFetch } from \"@/../actions\";\nimport notifier from \"@/admin/mixins/notifier\";\nimport QuickEdit from 'vue-quick-edit';\nimport { settingsRef, mediaRef, navRef, contentsRef, fieldsRef, routesRef, usersRef } from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\nexport default {\n  data: function data() {\n    return {\n      users: null,\n      currentUser: firebase.auth().currentUser,\n      filteredProperty: 'email',\n      query: '',\n      activeFilters: []\n    };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n  computed: {},\n  components: {\n    QuickEdit: QuickEdit\n  },\n  methods: {\n    filtered: function filtered() {\n      var filtered = this.users;\n      this.activeFilters.forEach(function (filter) {\n        filtered = filtered.filter(function (record) {\n          console.log(record[\"userDetails\"][filter.name]);\n          return filter.name === 'name' ? new RegExp(filter.value, 'i').test(record[\"userDetails\"][filter.name]) : record[\"userDetails\"][filter.name] == filter.value;\n          console.log(filter.value); //onsole.log(record);\n        });\n      }); // console.log(filtered);\n\n      console.log(filtered);\n      return this.users = filtered;\n    },\n    getusers: function getusers() {\n      this.users = userDetailsFetch(); // console.log(this.users);\n\n      if (this.users != null) {\n        this.showNotification('success', 'Users Dowloaded');\n      }\n    },\n    updateUser: function updateUser(currentUser, whichdetails, details) {\n      //console.log(\"i got challed\");\n      updateUserDetails(currentUser, whichdetails, details);\n      this.getusers();\n    },\n    addFilter: function addFilter() {\n      this.activeFilters.push({\n        name: this.filteredProperty,\n        value: this.query\n      });\n      this.filtered();\n      this.query = '';\n    },\n    removeFilter: function removeFilter(idx) {\n      this.activeFilters.splice(idx, 1);\n      this.getusers();\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.getusers();\n  }\n};",{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- notification -->\n    <transition mode=\"out-in\" name=\"fade\">\n      <div v-if=\"notification.message\" :class=\"'notification is-' + notification.type\">\n        <button class=\"delete\" @click=\"hideNotifications\"></button>\n        {{notification.message}}\n      </div>\n    </transition>\n\n    <h2>Users</h2>\n    <div class=\"box\">\n      <div class=\"columns\">\n        <div class=\"column\">\n        <select v-model=\"filteredProperty\">\n      <option value=\"firstname\">First Name</option>\n       <option value=\"lastname\">Last Name</option>\n       <option value=\"email\">Email</option>\n      <option value=\"uid\">uid</option>\n     \n    </select>\n    <input placeholder=\"filter value\" v-model=\"query\">    \n    <button @click=\"addFilter\">add filter</button>\n      <hr>\n  <table v-if=\"activeFilters.length\">\n    <tr style=\"width: 100px\">\n      <th colspan=\"3\">Filters in use:</th>\n    </tr>\n    <tr v-for=\"(filter, index) in activeFilters\" :key=\"index\">\n      <td>{{ filter.name }}:</td>\n      <td>{{ filter.value }}</td>\n      <td style=\"padding-left: 10px;\">\n        <a href=\"#\" @click.prevented=removeFilter(index)>\n          remove\n        </a>\n      </td>\n    </tr>\n  </table>\n  <hr v-if=\"activeFilters.length\">\n  \n\n  \n        </div>\n        </div>\n<a class=\"img-container\" v-for=\"(item, key) in users\" :key=\"key\"   >\n<!--  This is how you create a collapsible list using the key and array !-->\n  <div class=\"columns\">\n         <b-button    v-b-toggle=\"'collapse-'+key\"  variant=\"primary\">View: {{item.userDetails.firstname+item.userDetails.lastname}}</b-button>       \n   </div>\n   <b-collapse    :id=\"'collapse-'+key\"  >\n    <b-card>\n <div class=\"columns\">\n    <h4 style=\"margin-top:4%\">Userinfo</h4>\n     \n        <div class=\"column\">\n          <h6>First Name</h6>\n         \n          <quick-edit @input=\"updateUser(item.userDetails,'firstname',item.userDetails.firstname)\" v-model=\"item.userDetails.firstname\"></quick-edit>\n          \n     </div>\n    <div class=\"column\">\n  <h6>Last Name</h6>\n   <quick-edit  @input=\"updateUser(item.userDetails,'lastname',item.userDetails.lastname)\" v-model=\"item.userDetails.lastname\"></quick-edit>\n   </div>\n      <div class=\"column\">\n  <h6>Phone </h6>\n <quick-edit @input=\"updateUser(item.userDetails,'phone',item.userDetails.phone)\"   v-model=\"item.userDetails.phone\"></quick-edit>\n   </div>\n       <div class=\"column\">\n  <h6>Email </h6>\n <h6>{{item.userDetails.email}}</h6>\n   </div>\n         <div class=\"column\">\n  <h6>rating </h6>\n <h6>{{item.userDetails.rating}}/5</h6>\n   </div>\n   <div class=\"column\">\n     <h6>is a cleaner </h6>\n <quick-edit @input=\"updateUser(item.userDetails,'isCleaner',item.userDetails.isCleaner)\"     type=\"dropdown\" v-model=\"item.userDetails.isCleaner\"></quick-edit>\n   </div>\n    <div class=\"column\">\n     <h6>points </h6>\n  <quick-edit @input=\"updateUser(item.userDetails,'points',item.userDetails.points)\"   v-model=\"item.userDetails.points\"></quick-edit>\n   </div>\n    \n     </div>\n      </b-card></b-collapse> </a>\n\n\n     </div>\n    \n      </div>\n    </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { demoData } from \"@/../tamiat.config.json\";\nimport {updateUserDetails,userDetailsFetch} from \"@/../actions\"\nimport notifier from \"@/admin/mixins/notifier\";\nimport QuickEdit from 'vue-quick-edit';\nimport {\n  settingsRef,\n  mediaRef,\n  navRef,\n  contentsRef,\n  fieldsRef,\n  routesRef,\n  usersRef\n} from \"@/admin/firebase_config\";\nimport _ from \"lodash\";\n\nexport default {\n  data() {\n    return { \n        users:null,\n        currentUser: firebase.auth().currentUser,\n        filteredProperty: 'email',\n        query:'',\n        activeFilters: [],\n\n\n     };\n  },\n  firebase: {\n    settings: settingsRef,\n    media: mediaRef,\n    nav: navRef,\n    fields: fieldsRef,\n    contents: contentsRef,\n    routes: routesRef\n  },\n  mixins: [notifier],\n   computed: {\n    \n  },\n  components: { QuickEdit },\n  methods: {\nfiltered () {\n      var filtered =this.users;\n      this.activeFilters.forEach(filter => {\n        \n        filtered = filtered.filter(record => {\n          console.log(record[\"userDetails\"][filter.name]);\n          return filter.name === 'name'\n            ? new RegExp(filter.value, 'i').test(record[\"userDetails\"][filter.name])\n            : record[\"userDetails\"][filter.name] == filter.value; \n            console.log(filter.value);\n             //onsole.log(record);\n        })\n        \n      })\n     // console.log(filtered);\n      console.log(filtered);\n      return this.users = filtered\n    },\n    getusers(){\n\n        this.users = userDetailsFetch();\n       // console.log(this.users);\n        if(this.users!=null){\n            this.showNotification('success', 'Users Dowloaded')\n        }\n\n\n    },\n    updateUser(currentUser,whichdetails,details){\n      //console.log(\"i got challed\");\n      updateUserDetails(currentUser,whichdetails,details);\n      this.getusers()\n\n    },\n     addFilter () {\n      this.activeFilters.push({\n        name: this.filteredProperty,\n        value: this.query\n      })\n      this.filtered();\n      this.query = ''\n    },\n    removeFilter (idx) {\n      this.activeFilters.splice(idx, 1)\n      this.getusers();\n    },\n\n\n  },\n   beforeMount(){\n    this.getusers()\n },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.column > div {\n  margin-top: 15px;\n  &:first-child {\n    margin-top: 0px;\n  }\n}\n\nbutton {\n  vertical-align: middle !important;\n  margin-left: 30px;\n}\n\n.searchbox {\n    width:40%;\n    font-weight: bold;\n    border-radius: 5px\n}\ninput{\n  width:80%,\n\n}\n.columns{\n    margin-top:40px;\n\n}\n</style>\n"],"sourceRoot":"src/admin/pages"}]}