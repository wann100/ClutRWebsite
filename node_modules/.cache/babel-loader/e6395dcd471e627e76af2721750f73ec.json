{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/babel-loader/lib/index.js!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/fields/FieldNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/fields/FieldNew.vue","mtime":1565240946488},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/babel-loader/lib/index.js","mtime":1558705227210},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport checkbox from '@/admin/components/shared/Checkbox';\nimport dropdown from '@/admin/components/shared/Dropdown';\nimport { contentsRef, fieldsRef } from '@/admin/firebase_config';\nimport notifier from '@/admin/mixins/notifier';\nexport default {\n  name: 'fieldNew',\n  mixins: [notifier],\n  firebase: {\n    contents: contentsRef,\n    fields: fieldsRef\n  },\n  data: function data() {\n    return {\n      fieldName: '',\n      fieldType: {\n        id: '',\n        label: 'Field type'\n      },\n      multiValue: false,\n      listable: false,\n      fieldTypes: [{\n        id: 'textarea',\n        label: 'Textarea'\n      }, {\n        id: 'textbox',\n        label: 'Textbox'\n      }, {\n        id: 'integer',\n        label: 'Integer'\n      }, {\n        id: 'boolean',\n        label: 'Boolean'\n      }, {\n        id: 'url',\n        label: 'Url'\n      }, {\n        id: 'richtextbox',\n        label: 'Richtextbox'\n      }, {\n        id: 'tags',\n        label: 'Tags'\n      }, {\n        id: 'select',\n        label: 'Select'\n      }, {\n        id: 'image',\n        label: 'Image'\n      }]\n    };\n  },\n  props: ['add-field'],\n  methods: {\n    add: function add() {\n      var f = {\n        name: this.fieldName,\n        type: this.fieldType.id,\n        multiValue: this.multiValue,\n        listable: this.listable\n      };\n\n      if (f.listable && f.type === 'textarea') {\n        this.$notify({\n          title: 'Important message',\n          text: 'Field type must be other than \\'textarea\\' to apply sorting',\n          type: 'error'\n        });\n        return;\n      }\n\n      this.addField(f);\n      this.fieldName = '';\n      this.fieldType = {\n        id: '',\n        label: 'Field type'\n      };\n      this.multiValue = false;\n      this.listable = false;\n      this.$router.push({\n        path: '/admin/content'\n      });\n    },\n    resetForm: function resetForm() {\n      this.name = '';\n\n      for (var key in this.supports) {\n        this.supports[key] = false;\n      }\n    }\n  },\n  components: {\n    checkbox: checkbox,\n    dropdown: dropdown\n  }\n};",{"version":3,"sources":["FieldNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,QAAA,MAAA,oCAAA;AACA,OAAA,QAAA,MAAA,oCAAA;AACA,SAAA,WAAA,EAAA,SAAA,QAAA,yBAAA;AACA,OAAA,QAAA,MAAA,yBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,QAAA,CAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,WADA;AAEA,IAAA,MAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAFA;AAMA,MAAA,UAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA,KAPA;AAQA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,EAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,EAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjBA,EAqBA;AACA,QAAA,EAAA,EAAA,aADA;AAEA,QAAA,KAAA,EAAA;AAFA,OArBA,EAyBA;AACA,QAAA,EAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAzBA,EA6BA;AACA,QAAA,EAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA;AAFA,OA7BA,EAiCA;AACA,QAAA,EAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjCA;AARA,KAAA;AA+CA,GAvDA;AAwDA,EAAA,KAAA,EAAA,CAAA,WAAA,CAxDA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,UAAA,CAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,SADA;AAEA,QAAA,IAAA,EAAA,KAAA,SAAA,CAAA,EAFA;AAGA,QAAA,UAAA,EAAA,KAAA,UAHA;AAIA,QAAA,QAAA,EAAA,KAAA;AAJA,OAAA;;AAMA,UAAA,CAAA,CAAA,QAAA,IAAA,CAAA,CAAA,IAAA,KAAA,UAAA,EAAA;AACA,aAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,mBADA;AAEA,UAAA,IAAA,EAAA,6DAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA;AACA;;AACA,WAAA,QAAA,CAAA,CAAA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,WAAA,UAAA,GAAA,KAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAzBA;AA0BA,IAAA,SA1BA,uBA0BA;AACA,WAAA,IAAA,GAAA,EAAA;;AAEA,WAAA,IAAA,GAAA,IAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,CAAA,GAAA,IAAA,KAAA;AACA;AACA;AAhCA,GAzDA;AA2FA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,QAAA,EAAA;AAFA;AA3FA,CAAA","sourcesContent":["<template>\n  <div class=\"container is-widescreen\">\n\n    <h3 class=\"is-size-3 has-text-centered\">Create content field</h3><br>\n    <div class=\"box\">\n      <div class=\"columns\">\n        <div class=\"column is-one-third\">\n          <div class=\"field\">\n            <label class=\"label\">Field name</label>\n            <div class=\"control\">\n              <input class=\"input\" type=\"text\" placeholder=\"Field name\" v-model=\"fieldName\">\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Field type</label>\n            <div class=\"control\">\n              <dropdown :options=\"fieldTypes\" :selectedElement=\"fieldType\" />\n            </div>\n          </div>\n          <div class=\"field\">\n            <label class=\"label\">Multi value allowed</label>\n            <div class=\"control\">\n              <checkbox v-model=\"multiValue\" />\n            </div>\n            <label class=\"label\">Listable</label>\n            <div class=\"control\">\n              <checkbox v-model=\"listable\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"buttons\">\n        <button type=\"submit\" class=\"button is-success\" :disabled=\"fieldName === '' || fieldType.id === ''\" @click=\"add()\">Add field</button>\n        <router-link to=\"/admin/content\" class=\"button is-danger\">Cancel</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport checkbox from '@/admin/components/shared/Checkbox'\nimport dropdown from '@/admin/components/shared/Dropdown'\nimport { contentsRef, fieldsRef } from '@/admin/firebase_config'\nimport notifier from '@/admin/mixins/notifier'\nexport default {\n  name: 'fieldNew',\n  mixins: [notifier],\n  firebase: {\n    contents: contentsRef,\n    fields: fieldsRef\n  },\n  data () {\n    return {\n      fieldName: '',\n      fieldType: {\n        id: '',\n        label: 'Field type'\n      },\n      multiValue: false,\n      listable: false,\n      fieldTypes: [\n        {\n          id: 'textarea',\n          label: 'Textarea'\n        },\n        {\n          id: 'textbox',\n          label: 'Textbox'\n        },\n        {\n          id: 'integer',\n          label: 'Integer'\n        },\n        {\n          id: 'boolean',\n          label: 'Boolean'\n        },\n        {\n          id: 'url',\n          label: 'Url'\n        },\n        {\n          id: 'richtextbox',\n          label: 'Richtextbox'\n        },\n        {\n          id: 'tags',\n          label: 'Tags'\n        },\n        {\n          id: 'select',\n          label: 'Select'\n        },\n        {\n          id: 'image',\n          label: 'Image'\n        }\n      ]\n    }\n  },\n  props: ['add-field'],\n  methods: {\n    add () {\n      let f = {\n        name: this.fieldName,\n        type: this.fieldType.id,\n        multiValue: this.multiValue,\n        listable: this.listable\n      }\n      if (f.listable && f.type === 'textarea') {\n        this.$notify({\n          title: 'Important message',\n          text: 'Field type must be other than \\'textarea\\' to apply sorting',\n          type: 'error'\n        })\n        return\n      }\n      this.addField(f)\n      this.fieldName = ''\n      this.fieldType = {\n        id: '',\n        label: 'Field type'\n      }\n      this.multiValue = false\n      this.listable = false\n      this.$router.push({ path: '/admin/content' })\n    },\n    resetForm () {\n      this.name = ''\n\n      for (var key in this.supports) {\n        this.supports[key] = false\n      }\n    }\n  },\n  components: {\n    checkbox,\n    dropdown\n  }\n}\n\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/admin/pages/content/fields"}]}