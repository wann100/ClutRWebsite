{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/content-type/ContentType.vue?vue&type=template&id=58675a0c&scoped=true&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/content-type/ContentType.vue","mtime":1565240946486},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565232945777},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"contentType\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"container is-widescreen\" },\n      [\n        _c(\"router-view\", {\n          attrs: { \"edit-field\": _vm.editField, \"add-field\": _vm.addField }\n        }),\n        _c(\"transition\", { attrs: { mode: \"out-in\", name: \"fade\" } }, [\n          _vm.notification.message\n            ? _c(\"div\", { class: \"notification is-\" + _vm.notification.type }, [\n                _c(\"button\", {\n                  staticClass: \"delete\",\n                  on: { click: _vm.hideNotifications }\n                }),\n                _vm._v(_vm._s(_vm.notification.message) + \"\\n      \")\n              ])\n            : _vm._e()\n        ]),\n        _c(\"div\", { staticClass: \"columns\" }, [\n          _c(\"div\", { staticClass: \"column is-two-thirds\" }, [\n            _c(\"h2\", [_vm._v(\"Create content type\")]),\n            _c(\"div\", { staticClass: \"box\" }, [\n              _c(\"div\", { staticClass: \"columns\" }, [\n                _c(\"div\", { staticClass: \"column\" }, [\n                  _c(\"div\", { staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(\"Content type name\")\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      !_vm.selectedContent\n                        ? _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.name,\n                                expression: \"name\"\n                              }\n                            ],\n                            staticClass: \"input\",\n                            attrs: { type: \"text\", placeholder: \"e.g. Movies\" },\n                            domProps: { value: _vm.name },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.name = $event.target.value\n                              }\n                            }\n                          })\n                        : _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.selectedContent.name,\n                                expression: \"selectedContent.name\"\n                              }\n                            ],\n                            staticClass: \"input\",\n                            attrs: { type: \"text\", placeholder: \"e.g. Movies\" },\n                            domProps: { value: _vm.selectedContent.name },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.selectedContent,\n                                  \"name\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          })\n                    ])\n                  ]),\n                  _c(\n                    \"div\",\n                    { staticClass: \"field\" },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"button is-info\",\n                          attrs: { type: \"submit\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.callModal(\"add\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"Add new field\")]\n                      ),\n                      _vm.showModal.add\n                        ? _c(\n                            \"modal\",\n                            {\n                              staticClass: \"modal\",\n                              attrs: {\n                                kind: \"addContentField\",\n                                header: \"Add content field\"\n                              },\n                              on: {\n                                close: function($event) {\n                                  _vm.showModal.add = false\n                                },\n                                addContentField: function($event) {\n                                  return _vm.addNewContentField($event)\n                                }\n                              }\n                            },\n                            _vm._l(_vm.fieldTypes, function(field) {\n                              return _c(\"option\", { key: field.id }, [\n                                _vm._v(_vm._s(field.label))\n                              ])\n                            }),\n                            0\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Fields\")]),\n                  _vm.fields.length\n                    ? _c(\n                        \"label\",\n                        { staticClass: \"has-text-danger is-size-7\" },\n                        [\n                          _vm._v(\n                            \"Select the fields you want to be shown in content lists\"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _c(\n                    \"div\",\n                    { staticClass: \"field is-grouped is-grouped-multiline\" },\n                    [\n                      _c(\n                        \"ul\",\n                        { staticClass: \"nav-preview\" },\n                        _vm._l(_vm.checkedFields, function(field, fieldKey) {\n                          return field.checked\n                            ? _c(\"li\", { key: fieldKey }, [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(field.name) +\n                                    \"\\n                    \"\n                                ),\n                                _c(\"span\", [\n                                  fieldKey !== 0\n                                    ? _c(\"span\", {\n                                        staticClass:\n                                          \"has-text-success fa fa-arrow-up\",\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.moveFieldUp(\n                                              field,\n                                              _vm.checkedFields[fieldKey - 1]\n                                            )\n                                          }\n                                        }\n                                      })\n                                    : _vm._e(),\n                                  fieldKey !== _vm.checkedFields.length - 1\n                                    ? _c(\"span\", {\n                                        staticClass: \"fa fa-arrow-down\",\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.moveFieldDown(\n                                              field,\n                                              _vm.checkedFields[fieldKey + 1]\n                                            )\n                                          }\n                                        }\n                                      })\n                                    : _vm._e(),\n                                  _c(\n                                    \"span\",\n                                    [\n                                      field.type !== \"textarea\" &&\n                                      field.listable\n                                        ? _c(\"checkbox\", {\n                                            model: {\n                                              value: field.listable,\n                                              callback: function($$v) {\n                                                _vm.$set(field, \"listable\", $$v)\n                                              },\n                                              expression: \"field.listable\"\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ],\n                                    1\n                                  )\n                                ])\n                              ])\n                            : _vm._e()\n                        }),\n                        0\n                      )\n                    ]\n                  ),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _c(\"div\", [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(\"Slug - \"),\n                      _c(\"strong\", {\n                        domProps: { textContent: _vm._s(_vm.slug) }\n                      })\n                    ]),\n                    _c(\"div\", { staticClass: \"select\" }, [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.slug,\n                              expression: \"slug\"\n                            }\n                          ],\n                          attrs: { placeholder: \"Select Column For Slug\" },\n                          on: {\n                            change: function($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function(o) {\n                                  return o.selected\n                                })\n                                .map(function(o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.slug = $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            }\n                          }\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\", selected: \"\" } }, [\n                            _vm._v(\"Select Column For Slug\")\n                          ]),\n                          _vm._l(_vm.checkedFields, function(field, fieldKey) {\n                            return field.checked && field.type === \"textbox\"\n                              ? _c(\"option\", { key: fieldKey }, [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(field.name) +\n                                      \"\\n                    \"\n                                  )\n                                ])\n                              : _vm._e()\n                          })\n                        ],\n                        2\n                      )\n                    ]),\n                    _c(\"br\"),\n                    _c(\"br\"),\n                    _c(\"p\", [\n                      _vm._v(\"This will be used with :key to identify record.\")\n                    ])\n                  ])\n                ]),\n                _c(\n                  \"div\",\n                  { staticClass: \"column\" },\n                  [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(\"Available fields\")\n                    ]),\n                    _vm.fields.length\n                      ? _c(\n                          \"label\",\n                          { staticClass: \"label has-text-danger is-size-7\" },\n                          [\n                            _vm._v(\n                              \"Select the fields you want to include in your content type\"\n                            )\n                          ]\n                        )\n                      : _vm._e(),\n                    _c(\n                      \"div\",\n                      { staticClass: \"field is-grouped is-grouped-multiline\" },\n                      [\n                        _c(\n                          \"ul\",\n                          { staticClass: \"nav-preview\" },\n                          _vm._l(_vm.fields, function(field, fieldKey) {\n                            return _c(\n                              \"li\",\n                              { key: fieldKey, staticClass: \"control\" },\n                              [\n                                _c(\n                                  \"span\",\n                                  { staticClass: \"field\" },\n                                  [\n                                    _c(\"checkbox\", {\n                                      attrs: { label: field.name },\n                                      model: {\n                                        value: field.checked,\n                                        callback: function($$v) {\n                                          _vm.$set(field, \"checked\", $$v)\n                                        },\n                                        expression: \"field.checked\"\n                                      }\n                                    }),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"link-actions\" },\n                                      [\n                                        _c(\"span\", {\n                                          staticClass:\n                                            \"has-text-danger fa fa-trash\",\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.callModal(\"del\")\n                                            }\n                                          }\n                                        }),\n                                        _vm.showModal.del\n                                          ? _c(\"modal\", {\n                                              staticClass: \"modal\",\n                                              attrs: {\n                                                kind: \"deleteField\",\n                                                header:\n                                                  \"Are you sure you want do delete this content type?\"\n                                              },\n                                              on: {\n                                                close: function($event) {\n                                                  _vm.showModal.del = false\n                                                },\n                                                confirmDeleteField: function(\n                                                  $event\n                                                ) {\n                                                  return _vm.removeField(field)\n                                                }\n                                              }\n                                            })\n                                          : _vm._e(),\n                                        _c(\n                                          \"router-link\",\n                                          {\n                                            attrs: {\n                                              to:\n                                                \"/admin/content/fieldEdit/\" +\n                                                field[\".key\"]\n                                            }\n                                          },\n                                          [\n                                            _c(\"span\", {\n                                              staticClass:\n                                                \"has-text-info fa fa-edit\"\n                                            })\n                                          ]\n                                        )\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            )\n                          }),\n                          0\n                        )\n                      ]\n                    ),\n                    _c(\"br\"),\n                    _c(\n                      \"router-link\",\n                      {\n                        staticClass: \"button is-info is-small\",\n                        attrs: { to: \"/admin/content/fieldNew\" }\n                      },\n                      [_vm._v(\"Add new field\")]\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"div\", { staticClass: \"buttons\" }, [\n                _vm.selectedContent\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"button is-success\",\n                        attrs: {\n                          type: \"submit\",\n                          disabled:\n                            !_vm.selectedContent.name ||\n                            !_vm.checkedFields.length\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.createMenuItem(true)\n                          }\n                        }\n                      },\n                      [_vm._v(\"Edit\")]\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass: \"button is-success\",\n                        attrs: {\n                          type: \"submit\",\n                          disabled: !_vm.name || !_vm.checkedFields.length\n                        },\n                        on: {\n                          click: function($event) {\n                            return _vm.createMenuItem(false)\n                          }\n                        }\n                      },\n                      [_vm._v(\"Create new\")]\n                    )\n              ])\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"column\" }, [\n            _c(\"h2\", [_vm._v(\"Edit content type\")]),\n            _vm.contentsLoaded\n              ? _c(\"div\", { staticClass: \"box\" }, [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"dropdown\",\n                      class: { \"is-active\": _vm.dropdownActive },\n                      on: { click: _vm.toggleDropdown }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"dropdown-trigger\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"button\",\n                            staticStyle: { \"min-width\": \"200px !important\" },\n                            attrs: {\n                              \"aria-haspopup\": \"true\",\n                              \"aria-controls\": \"dropdown-menu\"\n                            }\n                          },\n                          [\n                            _c(\"span\", [\n                              _vm._v(_vm._s(_vm.selectedContentType.label))\n                            ]),\n                            _vm._m(0)\n                          ]\n                        )\n                      ]),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"dropdown-menu\",\n                          attrs: { id: \"dropdown-menu\", role: \"menu\" }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"dropdown-content\" },\n                            _vm._l(_vm.createdContentTypes, function(\n                              option,\n                              optionKey\n                            ) {\n                              return option\n                                ? _c(\n                                    \"a\",\n                                    {\n                                      key: optionKey,\n                                      staticClass: \"dropdown-item\",\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.selectContentType(option)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                  \" +\n                                          _vm._s(\n                                            option.label ? option.label : null\n                                          ) +\n                                          \"\\n                \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            }),\n                            0\n                          )\n                        ]\n                      )\n                    ]\n                  ),\n                  _vm.selectedContent\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"button is-danger\",\n                          attrs: { type: \"submit\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.deleteMenuItem()\n                            }\n                          }\n                        },\n                        [_vm._v(\"Delete\")]\n                      )\n                    : _vm._e()\n                ])\n              : _vm._e()\n          ])\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"icon is-small\" }, [\n      _c(\"i\", {\n        staticClass: \"fa fa-angle-down\",\n        attrs: { \"aria-hidden\": \"true\" }\n      })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}