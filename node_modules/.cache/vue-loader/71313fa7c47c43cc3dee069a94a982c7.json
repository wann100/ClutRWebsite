{"remainingRequest":"/Users/kognos/Documents/GitHub/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kognos/Documents/GitHub/tamiat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/tamiat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/tamiat/src/admin/pages/content/contents/ContentsNew.vue?vue&type=template&id=af267d2a&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/tamiat/src/admin/pages/content/contents/ContentsNew.vue","mtime":1565240946487},{"path":"/Users/kognos/Documents/GitHub/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565232945777},{"path":"/Users/kognos/Documents/GitHub/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/tamiat/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"box\" },\n    [\n      _c(\"loading\", {\n        attrs: {\n          color: \"#3b9169\",\n          active: _vm.isLoading,\n          \"can-cancel\": false,\n          \"is-full-page\": _vm.fullPage\n        },\n        on: {\n          \"update:active\": function($event) {\n            _vm.isLoading = $event\n          }\n        }\n      }),\n      _c(\"div\", { staticClass: \"columns\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"column is-two-thirds\" },\n          [\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"textbox\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.newContent[field.name],\n                            expression: \"newContent[field.name]\"\n                          }\n                        ],\n                        staticClass: \"input\",\n                        attrs: {\n                          type: \"text\",\n                          maxlength: \"25\",\n                          required: \"\",\n                          placeholder: field.name\n                        },\n                        domProps: { value: _vm.newContent[field.name] },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.newContent,\n                              field.name,\n                              $event.target.value\n                            )\n                          }\n                        }\n                      })\n                    ])\n                  ])\n                : _vm._e()\n            }),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"textarea\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      _c(\"textarea\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.newContent[field.name],\n                            expression: \"newContent[field.name]\"\n                          }\n                        ],\n                        staticClass: \"input\",\n                        attrs: { placeholder: field.name },\n                        domProps: {\n                          value: _vm.newContent[field.name],\n                          textContent: _vm._s(_vm.newContent[field.name])\n                        },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.newContent,\n                              field.name,\n                              $event.target.value\n                            )\n                          }\n                        }\n                      })\n                    ])\n                  ])\n                : _vm._e()\n            }),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"richtextbox\"\n                ? _c(\n                    \"div\",\n                    { key: index },\n                    [\n                      _c(\"quill-editor\", {\n                        attrs: { options: _vm.editorOptions },\n                        model: {\n                          value: _vm.newContent[field.name],\n                          callback: function($$v) {\n                            _vm.$set(_vm.newContent, field.name, $$v)\n                          },\n                          expression: \"newContent[field.name]\"\n                        }\n                      }),\n                      _c(\"input\", {\n                        staticStyle: { display: \"none\" },\n                        attrs: { type: \"file\", id: \"getImage\" },\n                        on: { change: _vm.uploadImage }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            }),\n            _c(\"br\"),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"select\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column\" }, [\n                        _c(\"div\", { staticClass: \"select margin-select\" }, [\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.select.selected,\n                                  expression: \"select.selected\"\n                                }\n                              ],\n                              on: {\n                                change: function($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function(o) {\n                                      return o.selected\n                                    })\n                                    .map(function(o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.select,\n                                    \"selected\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                }\n                              }\n                            },\n                            _vm._l(_vm.select.options, function(\n                              selectOption,\n                              selectIndex\n                            ) {\n                              return _c(\"option\", { key: selectIndex }, [\n                                _vm._v(_vm._s(selectOption))\n                              ])\n                            }),\n                            0\n                          )\n                        ])\n                      ]),\n                      _c(\n                        \"div\",\n                        { staticClass: \"column\" },\n                        _vm._l(_vm.select.options, function(option, optionKey) {\n                          return _c(\"div\", { key: optionKey }, [\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"tag is-info pointer\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.removeTag(\n                                      optionKey,\n                                      field.name,\n                                      true\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(option) +\n                                    \"\\n                \"\n                                ),\n                                _c(\"button\", { staticClass: \"delete is-small\" })\n                              ]\n                            )\n                          ])\n                        }),\n                        0\n                      )\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.selectOptionsRow,\n                            expression: \"selectOptionsRow\"\n                          }\n                        ],\n                        staticClass: \"input\",\n                        attrs: {\n                          type: \"text\",\n                          placeholder: field.name,\n                          maxlength: \"25\"\n                        },\n                        domProps: { value: _vm.selectOptionsRow },\n                        on: {\n                          blur: function($event) {\n                            return _vm.styleOptions(field.name)\n                          },\n                          keyup: function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k(\n                                $event.keyCode,\n                                \"enter\",\n                                13,\n                                $event.key,\n                                \"Enter\"\n                              )\n                            ) {\n                              return null\n                            }\n                            return _vm.styleOptions(field.name)\n                          },\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.selectOptionsRow = $event.target.value\n                          }\n                        }\n                      })\n                    ]),\n                    _c(\"p\", [_vm._v(\"Separate options with commas\")])\n                  ])\n                : _vm._e()\n            }),\n            _c(\"br\"),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"integer\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column is-one-third\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.newContent[field.name],\n                              expression: \"newContent[field.name]\"\n                            }\n                          ],\n                          staticClass: \"input\",\n                          attrs: { type: \"number\", placeholder: field.name },\n                          domProps: { value: _vm.newContent[field.name] },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.newContent,\n                                field.name,\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ])\n                    ])\n                  ])\n                : _vm._e()\n            }),\n            _c(\"br\"),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"boolean\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column is-one-third\" }, [\n                        _c(\"span\", [_vm._v(\"Name\")]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.booleanName,\n                              expression: \"booleanName\"\n                            }\n                          ],\n                          staticClass: \"input\",\n                          attrs: { placeholder: field.name + \" name\" },\n                          domProps: { value: _vm.booleanName },\n                          on: {\n                            blur: function($event) {\n                              return _vm.createNewBoolContent(field.name)\n                            },\n                            keyup: function($event) {\n                              if (\n                                !$event.type.indexOf(\"key\") &&\n                                _vm._k(\n                                  $event.keyCode,\n                                  \"enter\",\n                                  13,\n                                  $event.key,\n                                  \"Enter\"\n                                )\n                              ) {\n                                return null\n                              }\n                              return _vm.createNewBoolContent(field.name)\n                            },\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.booleanName = $event.target.value\n                            }\n                          }\n                        })\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column\" }, [\n                        _c(\"label\", { staticClass: \"checkbox\" }, [\n                          _c(\"input\", { attrs: { type: \"checkbox\" } }),\n                          _vm._v(\n                            \"\\n              \" +\n                              _vm._s(_vm.booleanName) +\n                              \"\\n            \"\n                          )\n                        ])\n                      ])\n                    ])\n                  ])\n                : _vm._e()\n            }),\n            _c(\"br\"),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"url\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column is-two-fifths\" }, [\n                        _c(\"span\", [_vm._v(\"Name\")]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.urlContentData.name,\n                              expression: \"urlContentData.name\"\n                            }\n                          ],\n                          staticClass: \"input\",\n                          attrs: { placeholder: field.name + \" name\" },\n                          domProps: { value: _vm.urlContentData.name },\n                          on: {\n                            blur: function($event) {\n                              return _vm.createUrlnewContent(field.name)\n                            },\n                            keyup: function($event) {\n                              if (\n                                !$event.type.indexOf(\"key\") &&\n                                _vm._k(\n                                  $event.keyCode,\n                                  \"enter\",\n                                  13,\n                                  $event.key,\n                                  \"Enter\"\n                                )\n                              ) {\n                                return null\n                              }\n                              return _vm.createUrlnewContent(field.name)\n                            },\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.urlContentData,\n                                \"name\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ]),\n                      _c(\"div\", { staticClass: \"column is-two-fifths\" }, [\n                        _c(\"span\", [_vm._v(\"Link\")]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.urlContentData.link,\n                              expression: \"urlContentData.link\"\n                            }\n                          ],\n                          staticClass: \"input\",\n                          attrs: { placeholder: field.name + \" link\" },\n                          domProps: { value: _vm.urlContentData.link },\n                          on: {\n                            blur: function($event) {\n                              return _vm.createUrlnewContent(field.name)\n                            },\n                            keyup: function($event) {\n                              if (\n                                !$event.type.indexOf(\"key\") &&\n                                _vm._k(\n                                  $event.keyCode,\n                                  \"enter\",\n                                  13,\n                                  $event.key,\n                                  \"Enter\"\n                                )\n                              ) {\n                                return null\n                              }\n                              return _vm.createUrlnewContent(field.name)\n                            },\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.urlContentData,\n                                \"link\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"columns\" }, [\n                      _c(\"div\", { staticClass: \"column\" }, [\n                        _c(\"span\", [_vm._v(\"Preview:\")]),\n                        _c(\"a\", { attrs: { href: _vm.urlContentData.link } }, [\n                          _vm._v(_vm._s(_vm.urlContentData.name))\n                        ])\n                      ])\n                    ])\n                  ])\n                : _vm._e()\n            })\n          ],\n          2\n        ),\n        _c(\n          \"div\",\n          { staticClass: \"column is-one-third\" },\n          [\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"tags\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"tags tagscontainer\" },\n                        [\n                          _vm._l(_vm.newContent[field.name], function(\n                            tag,\n                            tagKey\n                          ) {\n                            return _c(\n                              \"span\",\n                              {\n                                key: tagKey,\n                                staticClass: \"tag is-info pointer\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.removeTag(tagKey, field.name)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              \" +\n                                    _vm._s(tag) +\n                                    \"\\n              \"\n                                ),\n                                _c(\"button\", { staticClass: \"delete is-small\" })\n                              ]\n                            )\n                          }),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.inputData,\n                                expression: \"inputData\"\n                              }\n                            ],\n                            staticClass: \"input\",\n                            attrs: {\n                              placeholder: field.name,\n                              type: \"text\",\n                              maxlength: \"25\"\n                            },\n                            domProps: { value: _vm.inputData },\n                            on: {\n                              blur: function($event) {\n                                return _vm.styleTags(field.name)\n                              },\n                              keyup: function($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  _vm._k(\n                                    $event.keyCode,\n                                    \"enter\",\n                                    13,\n                                    $event.key,\n                                    \"Enter\"\n                                  )\n                                ) {\n                                  return null\n                                }\n                                return _vm.styleTags(field.name)\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.inputData = $event.target.value\n                              }\n                            }\n                          })\n                        ],\n                        2\n                      ),\n                      _c(\"p\", [_vm._v(\"Separate tags with commas\")])\n                    ])\n                  ])\n                : _vm._e()\n            }),\n            _vm._l(_vm.fields, function(field, index) {\n              return field.type === \"image\"\n                ? _c(\"div\", { key: index, staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(_vm._s(field.name))\n                    ]),\n                    _c(\"div\", { staticClass: \"control\" }, [\n                      _vm.imagePreview\n                        ? _c(\"img\", { attrs: { src: _vm.imagePreview } })\n                        : _vm._e(),\n                      _c(\"div\", { staticClass: \"file\" }, [\n                        _c(\"label\", { staticClass: \"file-label\" }, [\n                          _c(\"input\", {\n                            staticClass: \"file-input\",\n                            attrs: { type: \"file\", name: \"resume\" },\n                            on: {\n                              change: function($event) {\n                                return _vm.uploadFeaturedImage(\n                                  $event,\n                                  field.name\n                                )\n                              }\n                            }\n                          }),\n                          _vm._m(0, true)\n                        ])\n                      ])\n                    ])\n                  ])\n                : _vm._e()\n            })\n          ],\n          2\n        )\n      ]),\n      _vm.notification.message\n        ? _c(\"div\", { class: \"notification is-\" + _vm.notification.type }, [\n            _c(\"button\", {\n              staticClass: \"delete\",\n              on: { click: _vm.hideNotifications }\n            }),\n            _vm._v(\"\\n    \" + _vm._s(_vm.notification.message) + \"\\n  \")\n          ])\n        : _vm._e(),\n      _c(\n        \"button\",\n        {\n          staticClass: \"button is-success\",\n          attrs: { type: \"submit\" },\n          on: {\n            click: function($event) {\n              return _vm.add(\"published\")\n            }\n          }\n        },\n        [_vm._v(\"Publish\")]\n      ),\n      _c(\n        \"button\",\n        {\n          staticClass: \"button is-info\",\n          attrs: { type: \"submit\" },\n          on: {\n            click: function($event) {\n              return _vm.add(\"saved\")\n            }\n          }\n        },\n        [_vm._v(\"Save Draft\")]\n      ),\n      _c(\n        \"router-link\",\n        {\n          staticClass: \"button is-danger\",\n          attrs: { to: \"/admin/content/\" + _vm.$route.params.key }\n        },\n        [_vm._v(\"Cancel\")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"file-cta\" }, [\n      _c(\"span\", { staticClass: \"file-icon\" }, [\n        _c(\"i\", { staticClass: \"fa fa-upload\" })\n      ]),\n      _c(\"span\", { staticClass: \"file-label\" }, [_vm._v(\"Choose a file…\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}