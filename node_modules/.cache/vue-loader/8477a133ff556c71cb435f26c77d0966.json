{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/components/shared/Modal.vue?vue&type=template&id=c18d9e1a&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/components/shared/Modal.vue","mtime":1565240946484},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565232945777},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"modal is-active\" }, [\n    _c(\"div\", { staticClass: \"modal-background\" }),\n    _c(\"div\", { staticClass: \"modal-card\" }, [\n      _c(\"header\", { staticClass: \"modal-card-head\" }, [\n        _c(\"p\", { staticClass: \"modal-card-title\" }, [\n          _vm._v(_vm._s(_vm.header))\n        ]),\n        _c(\"button\", {\n          staticClass: \"delete is-medium\",\n          attrs: { \"aria-label\": \"close\" },\n          on: {\n            click: function($event) {\n              return _vm.$emit(\"close\")\n            }\n          }\n        })\n      ]),\n      _vm.kind == \"addField\" ||\n      _vm.kind == \"addPage\" ||\n      _vm.kind == \"addSetting\" ||\n      _vm.kind == \"addContentField\"\n        ? _c(\"section\", { staticClass: \"modal-card-body\" }, [\n            _vm.kind == \"addField\"\n              ? _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fieldName,\n                      expression: \"fieldName\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"Property\" },\n                  domProps: { value: _vm.fieldName },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.fieldName = $event.target.value\n                    }\n                  }\n                })\n              : _vm._e(),\n            _vm.kind == \"addPage\"\n              ? _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.pageName,\n                      expression: \"pageName\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"Page\" },\n                  domProps: { value: _vm.pageName },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.pageName = $event.target.value\n                    }\n                  }\n                })\n              : _vm._e(),\n            _vm.kind == \"addSetting\"\n              ? _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.settingName,\n                      expression: \"settingName\"\n                    }\n                  ],\n                  staticClass: \"input\",\n                  attrs: { type: \"text\", placeholder: \"Setting\" },\n                  domProps: { value: _vm.settingName },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.settingName = $event.target.value\n                    }\n                  }\n                })\n              : _vm._e(),\n            _vm.kind == \"addContentField\"\n              ? _c(\"div\", [\n                  _c(\"div\", { staticClass: \"field\" }, [\n                    _c(\"label\", { staticClass: \"label\" }, [\n                      _vm._v(\"Name of the content field\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contentFieldName,\n                          expression: \"contentFieldName\"\n                        }\n                      ],\n                      staticClass: \"input\",\n                      attrs: { type: \"text\", placeholder: \"Name\" },\n                      domProps: { value: _vm.contentFieldName },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.contentFieldName = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"label\", { staticClass: \"label\" }, [\n                    _vm._v(\"Type of the content field\")\n                  ]),\n                  _c(\"div\", { staticClass: \"select\" }, [\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.contentFieldType,\n                            expression: \"contentFieldType\"\n                          }\n                        ],\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.contentFieldType = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          }\n                        }\n                      },\n                      [\n                        _vm._t(\"default\", [\n                          _c(\"option\", [_vm._v(\"There are no options\")])\n                        ])\n                      ],\n                      2\n                    )\n                  ])\n                ])\n              : _vm._e()\n          ])\n        : _vm._e(),\n      _vm.kind == \"logout\"\n        ? _c(\"footer\", { staticClass: \"modal-card-foot\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"button is-success\",\n                on: {\n                  click: function($event) {\n                    return _vm.$emit(\"confirmLogout\")\n                  }\n                }\n              },\n              [_vm._v(\"Logout\")]\n            ),\n            _c(\n              \"button\",\n              {\n                staticClass: \"button\",\n                on: {\n                  click: function($event) {\n                    return _vm.$emit(\"close\")\n                  }\n                }\n              },\n              [_vm._v(\"Cancel\")]\n            )\n          ])\n        : _c(\n            \"footer\",\n            { staticClass: \"modal-card-foot\" },\n            [\n              _vm.kind == \"deletePage\" ||\n              _vm.kind == \"deleteField\" ||\n              _vm.kind == \"deleteSetting\" ||\n              _vm.kind == \"deleteContent\" ||\n              _vm.kind == \"bulkDeleteSelected\"\n                ? [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"button is-success\",\n                        on: {\n                          click: function($event) {\n                            return _vm.deleteObj()\n                          }\n                        }\n                      },\n                      [_vm._v(\"Confirm\")]\n                    )\n                  ]\n                : [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"button is-success\",\n                        on: {\n                          click: function($event) {\n                            return _vm.add()\n                          }\n                        }\n                      },\n                      [_vm._v(\"Add\")]\n                    )\n                  ],\n              _c(\n                \"button\",\n                {\n                  staticClass: \"button\",\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"close\")\n                    }\n                  }\n                },\n                [_vm._v(\"Cancel\")]\n              )\n            ],\n            2\n          )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}