{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/fields/FieldEdit.vue?vue&type=template&id=a5e4dcf0&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/src/admin/pages/content/fields/FieldEdit.vue","mtime":1565240946488},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1565232945777},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/tamiat/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container is-widescreen\" }, [\n    _c(\"h3\", { staticClass: \"is-size-3 has-text-centered\" }, [\n      _vm._v(\"Edit content field\")\n    ]),\n    _c(\"br\"),\n    _c(\"div\", { staticClass: \"box\" }, [\n      _c(\"div\", { staticClass: \"columns\" }, [\n        _c(\"div\", { staticClass: \"column is-one-third\" }, [\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Field name\")]),\n            _c(\"div\", { staticClass: \"control\" }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.field.name,\n                    expression: \"field.name\"\n                  }\n                ],\n                staticClass: \"input\",\n                attrs: { type: \"text\", placeholder: \"Field name\" },\n                domProps: { value: _vm.field.name },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.field, \"name\", $event.target.value)\n                  }\n                }\n              })\n            ])\n          ]),\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Field type\")]),\n            _c(\n              \"div\",\n              { staticClass: \"control\" },\n              [\n                _c(\"dropdown\", {\n                  attrs: {\n                    options: _vm.fieldTypes,\n                    selectedElement: _vm.fieldType\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", { staticClass: \"label\" }, [\n              _vm._v(\"Multi value allowed\")\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"control\" },\n              [\n                _c(\"checkbox\", {\n                  model: {\n                    value: _vm.field.multiValue,\n                    callback: function($$v) {\n                      _vm.$set(_vm.field, \"multiValue\", $$v)\n                    },\n                    expression: \"field.multiValue\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\"label\", { staticClass: \"label\" }, [_vm._v(\"Listable\")]),\n            _c(\n              \"div\",\n              { staticClass: \"control\" },\n              [\n                _c(\"checkbox\", {\n                  model: {\n                    value: _vm.field.listable,\n                    callback: function($$v) {\n                      _vm.$set(_vm.field, \"listable\", $$v)\n                    },\n                    expression: \"field.listable\"\n                  }\n                })\n              ],\n              1\n            )\n          ])\n        ])\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"buttons\" },\n        [\n          _c(\n            \"button\",\n            {\n              staticClass: \"button is-success\",\n              attrs: {\n                type: \"submit\",\n                disabled: _vm.field.name === \"\" || _vm.field.type === \"\"\n              },\n              on: {\n                click: function($event) {\n                  return _vm.edit()\n                }\n              }\n            },\n            [_vm._v(\"Edit field\")]\n          ),\n          _c(\n            \"router-link\",\n            {\n              staticClass: \"button is-danger\",\n              attrs: { to: \"/admin/content\" }\n            },\n            [_vm._v(\"Cancel\")]\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}