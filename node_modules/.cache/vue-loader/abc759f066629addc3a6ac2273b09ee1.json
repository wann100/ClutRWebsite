{"remainingRequest":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kognos/Documents/GitHub/ClutRWebsite/src/app/templates/NewsList.vue?vue&type=style&index=0&id=16932b8e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/src/app/templates/NewsList.vue","mtime":1565240946504},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/css-loader/index.js","mtime":1565232945271},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565232945777},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/postcss-loader/src/index.js","mtime":1558705227897},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/sass-loader/lib/loader.js","mtime":1558705227962},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1565232945238},{"path":"/Users/kognos/Documents/GitHub/ClutRWebsite/node_modules/vue-loader/lib/index.js","mtime":1565232945777}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '@/app/styles/index.scss';\n",{"version":3,"sources":["NewsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA","file":"NewsList.vue","sourceRoot":"src/app/templates","sourcesContent":["<!-- this is an example of a dynamic template. -->\n<!-- To use this template you will need a content type which has following fields\n    img\n    title\n    subheadline\n    body\n    category\n    date\n  -->\n<template>\n  <div class=\"page-news-list\">\n    <app-header></app-header>\n\n    <div class=\"news-list\">\n      <div class=\"container\">\n        <div class=\"clearfix\">\n          <div class=\"leftbar\">\n            <h2 class=\"is-heading\">Latest News Entries</h2>\n          </div>\n\n          <div class=\"rightbar\">\n            <div class=\"search-box form-icon-wrapper\">\n              <input @keydown.enter=\"search\" v-model=\"searchQuery\" class=\"form-control\" placeholder=\"Search...\">\n\n              <button @click=\"search\">\n                <i class=\"fa fa-arrow-right\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"clearfix news-listing-box\">\n          <div class=\"leftbar\">\n            <div v-if=\"loaded === false\">\n              <h4>Loading News.. Please wait..</h4>\n            </div>\n            <div v-else-if=\"currentPageNews && currentPageNews.length > 0\">\n              <div v-for=\"newsItem in currentPageNews\" :key=\"newsItem['.key']\" class=\"news\">\n                <img :src=\"newsItem.img || require('@/app/assets/img/coast.jpg')\" class=\"responsive-image\">\n                <div class=\"news-preview-content\">\n                  <h2 class=\"news-title\" v-if=\"newsItem.title\" v-text=\"newsItem.title\"></h2>\n                  <p v-if=\"newsItem.subheadline\" v-text=\"newsItem.subheadline\"></p>\n                  <router-link :to=\"$route.path + '/' + (newsItem.slug ? newsItem.slug : newsItem['.key'])\" class=\"btn is-small\">Read more</router-link>\n                </div>\n              </div>\n\n              <pagination :totalItems=\"filteredNews.length\" :perPage=\"perPage\" :currentPage=\"filter.currentPage\" @changePage=\"changePage\">\n              </pagination>\n            </div>\n            <div v-else>\n              No News Found\n            </div>\n          </div>\n\n          <div class=\"rightbar\">\n            <h3 class=\"is-subheading\">Search By Topic</h3>\n\n            <ul v-if=\"categories\" class=\"topic-list\">\n              <li v-for=\"(count, category) in categories\" :key=\"category\">\n                <a @click=\"changeCategory(category)\">{{ category }} <span class=\"count\">({{ count }})</span></a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <app-footer></app-footer>\n  </div>\n</template>\n\n<script>\nimport appHeader from '@/app/components/appHeader'\nimport appFooter from '@/app/components/appFooter'\nimport pagination from '@/app/components/pagination'\nimport { contentsRef, routesRef } from '@/admin/firebase_config/index'\nimport contentFetch from '@/admin/mixins/contentFetch'\nimport _ from 'lodash'\n\nconst stringContains = (search, string) => {\n  let strContains = false\n  stringArr.forEach(string => {\n    strContains = string.toLowerCase().includes(search.toLowerCase()) && true\n  })\n  return strContains\n}\n\nexport default {\n  mixins: [contentFetch],\n  components: {\n    appHeader,\n    appFooter,\n    pagination\n  },\n  firebase: {\n    routes: routesRef,\n    contents: {\n      source: contentsRef,\n      readyCallback: function () {\n        this.loaded = true\n      }\n    }\n  },\n  data () {\n    return {\n      filter: {\n        category: undefined,\n        q: undefined,\n        currentPage: 1\n      },\n      searchQuery: undefined,\n      perPage: 4, // No of news per page\n      loaded: false\n    }\n  },\n  watch: {\n    // Update routes whenenver any filter paramters change\n    filter: {\n      handler: function () {\n        this.updateRoute()\n      },\n      deep: true\n    }\n  },\n  computed: {\n    news () {\n      let currentRoute = this.routes.filter((route) => {\n        return route.path === this.$route.path\n      })[0]\n\n      return this.getContentsByType(currentRoute.contentType, true)\n    },\n    filteredNews () {\n      const searchQuery = this.filter.q\n      const category = this.filter.category\n\n      return _.filter(this.news, function (o) {\n        return (!searchQuery || (stringContains(searchQuery, o.title) || stringContains(searchQuery, o.subheadline))) &&\n               (!category || (stringContains(category, o.category.options)))\n      })\n    },\n    currentPageNews () {\n      return _.slice(this.filteredNews, this.filter.currentPage - 1, (this.filter.currentPage - 1) + this.perPage)\n    },\n    categories () {\n      let found_categories = {}\n      this.news.forEach(news => {\n        if(_.isEmpty(found_categories)) {\n          found_categories = _.countBy(news.category.options, function(option){\n            return option\n          })\n        } else {\n          let currNewsCat =  _.countBy(news.category.options, function(option){\n            return option\n          })\n          //comparing current categories with the new posts categories and makes chages accordingly\n          Object.keys(found_categories).forEach(keyCat => {\n            Object.keys(currNewsCat).forEach(keyCurCat => {\n              if(keyCat === keyCurCat){\n                found_categories[keyCat] = found_categories[keyCat] + currNewsCat[keyCurCat]\n              } else if(!(keyCurCat in found_categories)){\n                found_categories[keyCurCat] = currNewsCat[keyCurCat]\n              }\n            })\n          })\n        }\n      })\n      return found_categories\n    },\n    query () {\n      return this.$route.query\n    }\n  },\n  mounted () {\n    this.filter.currentPage = parseInt(_.get(this.query, 'page', 1))\n    this.filter.category = _.get(this.query, 'category')\n    this.filter.q = _.get(this.query, 'q')\n  },\n  methods: {\n    search () {\n      this.filter.q = this.searchQuery\n    },\n    changeCategory (category) {\n      this.filter.currentPage = 1\n      this.filter.category = category.toLowerCase()\n    },\n    changePage (toPage) {\n      this.filter.currentPage = toPage\n    },\n    updateRoute () {\n      this.$router.replace({ query: { q: this.filter.q, category: this.filter.category, page: this.filter.currentPage } })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/app/styles/index.scss';\n</style>\n"]}]}